From 7ef68928a1136a9288598d94eb27c4d6a707a51b Mon Sep 17 00:00:00 2001
From: Developer-Ecosystem-Engineering
 <65677710+Developer-Ecosystem-Engineering@users.noreply.github.com>
Date: Fri, 8 Jul 2022 10:52:46 -0700
Subject: [PATCH] Improve _mm_srai_epi32 to handle complex arguments

Complex arguments are not always handled properly by _mm_srai_epi32.

Arguments like below will properly evaluate
input[i] = _mm_srai_epi32(input[i], new_sqrt2_bits - 1 + shift);

This also resolves 5 failing tests

[  FAILED  ] 5 tests, listed below:
[  FAILED  ] TX_ASM/InvTxfm2dAsmTest.sqr_txfm_match_test/0, where GetParam() = (0x102c7b198, 8)
[  FAILED  ] TX_ASM/InvTxfm2dAsmTest.sqr_txfm_match_test/1, where GetParam() = (0x102c7b198, 10)
[  FAILED  ] TX_ASM/InvTxfm2dAsmTest.lowbd_txfm_match_test/0, where GetParam() = (0x102c7b198, 8)
[  FAILED  ] TX_ASM/InvTxfm2dAddTest.svt_av1_inv_txfm_add/0, where GetParam() = (0x102c7d800, 8)
[  FAILED  ] SSE4_1/AV1SelfguidedFilterTest.CorrectnessTest/0, where GetParam() = (0x102cd4f20)
---
 sse2neon.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/sse2neon.h b/sse2neon.h
index 42a89195..c446f73a 100644
--- a/sse2neon.h
+++ b/sse2neon.h
@@ -5704,7 +5704,7 @@ FORCE_INLINE __m128i _mm_srai_epi16(__m128i a, int imm)
             ret = a;                                                       \
         } else if (_sse2neon_likely(0 < (imm) && (imm) < 32)) {            \
             ret = vreinterpretq_m128i_s32(                                 \
-                vshlq_s32(vreinterpretq_s32_m128i(a), vdupq_n_s32(-imm))); \
+                vshlq_s32(vreinterpretq_s32_m128i(a), vdupq_n_s32(-(imm)))); \
         } else {                                                           \
             ret = vreinterpretq_m128i_s32(                                 \
                 vshrq_n_s32(vreinterpretq_s32_m128i(a), 31));              \

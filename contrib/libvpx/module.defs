$(eval $(call import.MODULE.defs,LIBVPX,libvpx))
$(eval $(call import.CONTRIB.defs,LIBVPX))

LIBVPX.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs2/libvpx-1.15.2.tar.gz
LIBVPX.FETCH.url    += https://github.com/webmproject/libvpx/archive/refs/tags/v1.15.2.tar.gz
LIBVPX.FETCH.sha256  = 26fcd3db88045dee380e581862a6ef106f49b74b6396ee95c2993a260b4636aa

LIBVPX.GCC.args.c_std =

LIBVPX.CONFIGURE.args.host =
LIBVPX.CONFIGURE.deps  =
LIBVPX.CONFIGURE.extra =     \
    --as=nasm \
    --enable-vp8-encoder        \
    --disable-vp8-decoder       \
    --enable-vp9-encoder        \
    --disable-vp9-decoder       \
    --enable-vp9-highbitdepth   \
    --disable-examples          \
    --disable-docs              \
    --disable-unit-tests


ifeq (1,$(HOST.cross))
    LIBVPX.CONFIGURE.args.build =
    ifneq ($(HOST.system),darwin)
        LIBVPX.CONFIGURE.env.CROSS  = CROSS="$(HOST.spec)-"
        LIBVPX.CONFIGURE.extra += --enable-static-msvcrt
        ifeq (i686,$(HOST.machine))
            LIBVPX.CONFIGURE.extra += --target=x86-win32-gcc
        else ifeq (x86_64,$(HOST.machine))
            LIBVPX.CONFIGURE.extra += --target=x86_64-win64-gcc
        else ifeq (aarch64,$(HOST.machine))
            LIBVPX.CONFIGURE.extra += --target=arm64-win64-gcc
        endif
    endif
endif

ifeq (linux,$(HOST.system))
    ifeq (x86_64,$(HOST.machine))
        LIBVPX.CONFIGURE.extra += --enable-pic
    endif
endif

ifeq (darwin,$(HOST.system))
    ifeq (arm64,$(HOST.machine))
        LIBVPX.CONFIGURE.extra += --target=arm64-darwin20-gcc
    else ifeq (x86_64,$(HOST.machine))
        LIBVPX.CONFIGURE.extra += --target=x86_64-darwin14-gcc
    endif
endif

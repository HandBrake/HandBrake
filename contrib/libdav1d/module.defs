$(eval $(call import.MODULE.defs,LIBDAV1D,libdav1d,PTHREADW32))
$(eval $(call import.CONTRIB.defs,LIBDAV1D))

LIBDAV1D.FETCH.url     = https://github.com/HandBrake/HandBrake-contribs/releases/download/contribs/dav1d-0.8.2.tar.bz2
LIBDAV1D.FETCH.url    += https://code.videolan.org/videolan/dav1d/-/archive/0.8.2/dav1d-0.8.2.tar.bz2
LIBDAV1D.FETCH.sha256  = 78ec7a1714d98a8f4ecbc4255e83e6c4c944cdd881871ea234ce40153fd3df04

LIBDAV1D.build_dir     = build/

LIBDAV1D.CONFIGURE.exe    = $(MESON.exe)
LIBDAV1D.CONFIGURE.deps   =
LIBDAV1D.CONFIGURE.shared =
LIBDAV1D.CONFIGURE.host   =
LIBDAV1D.CONFIGURE.build  =
LIBDAV1D.CONFIGURE.static = -Ddefault_library=static
LIBDAV1D.CONFIGURE.extra  = --libdir=$(call fn.ABSOLUTE,$(CONTRIB.build/))lib/ \
                            -Denable_tools=false -Denable_tests=false -Denable_avx512=false
LIBDAV1D.CONFIGURE.env    =

ifneq (none,$(LIBDAV1D.GCC.g))
    LIBDAV1D.CONFIGURE.extra += --buildtype=debug
    ifeq (none,$(LIBDAV1D.GCC.O))
        LIBDAV1D.CONFIGURE.extra += --optimization=g
    endif
else
    LIBDAV1D.CONFIGURE.extra += --buildtype=release
    ifneq (,$(filter $(LIBDAV1D.GCC.O),size size-aggressive))
        LIBDAV1D.CONFIGURE.extra += --optimization=s
    endif
endif

ifeq (darwin,$(HOST.system))
        LIBDAV1D.CONFIGURE.extra += --cross-file=$(call fn.ABSOLUTE,$(LIBDAV1D.EXTRACT.dir/))/$(HOST.machine)-darwin-gcc.meson -Dc_args="-arch $(HOST.machine)"
endif

ifeq (1-mingw,$(HOST.cross)-$(HOST.system))
    LIBDAV1D.CONFIGURE.extra += --cross-file=$(call fn.ABSOLUTE,$(LIBDAV1D.EXTRACT.dir/))$(HOST.machine)-w64-mingw32.meson
endif

LIBDAV1D.BUILD.make       = $(NINJA.exe)
LIBDAV1D.BUILD.extra      = -v

LIBDAV1D.INSTALL.make     = $(NINJA.exe)

LIBDAV1D.CLEAN.make       = $(NINJA.exe)

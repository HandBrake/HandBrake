From d51dd0f00f12d589093284a3689f1d2556f5be39 Mon Sep 17 00:00:00 2001
From: Damiano Galassi <damiog@gmail.com>
Date: Sat, 14 Sep 2024 09:40:42 +0200
Subject: [PATCH] Port ARM64 features detection code from SVT-AV1

---
 source/common/cpu.cpp | 118 +++++++++++++++++++++++++++++++++++++++---
 1 file changed, 112 insertions(+), 6 deletions(-)

diff --git a/source/common/cpu.cpp b/source/common/cpu.cpp
index 61cdaadfb..1b334eef9 100644
--- a/source/common/cpu.cpp
+++ b/source/common/cpu.cpp
@@ -391,29 +391,135 @@ uint32_t cpu_detect(bool benableavx512)
 
 #elif X265_ARCH_ARM64
 
-uint32_t cpu_detect(bool benableavx512)
+#if defined(__linux__)
+// For reading the HWCAP flags
+#include <sys/auxv.h>
+#elif defined(__APPLE__)
+#include <stdbool.h>
+#include <sys/sysctl.h>
+#elif defined(_MSC_VER)
+#include <windows.h>
+#endif
+
+#if defined(__linux__)
+
+// Define hwcap values ourselves: building with an old auxv header where these
+// hwcap values are not defined should not prevent features from being enabled.
+#define X265_ARM64_HWCAP_CRC32 (1 << 7)
+#define X265_ARM64_HWCAP_ASIMDDP (1 << 20)
+#define X265_ARM64_HWCAP_SVE (1 << 22)
+#define X265_ARM64_HWCAP2_SVE2 (1 << 1)
+#define X265_ARM64_HWCAP2_I8MM (1 << 13)
+
+uint32_t cpu_detect(bool unused)
 {
+#if HAVE_ARM_CRC32 || HAVE_NEON_DOTPROD || HAVE_SVE
+    unsigned long hwcap = getauxval(AT_HWCAP);
+#endif
+#if HAVE_NEON_I8MM || HAVE_SVE2
+    unsigned long hwcap2 = getauxval(AT_HWCAP2);
+#endif
+
     int flags = 0;
 
     #if HAVE_NEON
-         flags |= X265_CPU_NEON;
+         flags |= X265_CPU_NEON;  // Neon is mandatory in Armv8.0-A.
     #endif
     #if HAVE_NEON_DOTPROD
-         flags |= X265_CPU_NEON_DOTPROD;
+         if (hwcap & X265_ARM64_HWCAP_ASIMDDP)
+         {
+             flags |= X265_CPU_NEON_DOTPROD;
+         }
     #endif
     #if HAVE_NEON_I8MM
-         flags |= X265_CPU_NEON_I8MM;
+         if (hwcap2 & X265_ARM64_HWCAP2_I8MM)
+         {
+             flags |= X265_CPU_NEON_I8MM;
+         }
     #endif
     #if HAVE_SVE
-         flags |= X265_CPU_SVE;
+         if (hwcap & X265_ARM64_HWCAP_SVE)
+         {
+             flags |= X265_CPU_SVE;
+         }
     #endif
     #if HAVE_SVE2
-         flags |= X265_CPU_SVE2;
+         if (hwcap2 & X265_ARM64_HWCAP2_SVE2)
+         {
+             flags |= X265_CPU_SVE2;
+         }
     #endif
 
     return flags;
 }
 
+#elif defined(__APPLE__) // end __linux__
+
+// sysctlbyname() parameter documentation for instruction set characteristics:
+// https://developer.apple.com/documentation/kernel/1387446-sysctlbyname/determining_instruction_set_characteristics
+#if HAVE_ARM_CRC32 || HAVE_NEON_DOTPROD || HAVE_NEON_I8MM
+static bool have_feature(const char *feature)
+{
+    int64_t feature_present = 0;
+    size_t size = sizeof(feature_present);
+    if (sysctlbyname(feature, &feature_present, &size, NULL, 0) != 0)
+    {
+        return false;
+    }
+    return feature_present;
+}
+#endif
+
+uint32_t cpu_detect(bool unused)
+{
+    int flags = 0;
+
+    #if HAVE_NEON
+        flags |= X265_CPU_NEON;  // Neon is mandatory in Armv8.0-A.
+    #endif
+    #if HAVE_NEON_DOTPROD
+        if (have_feature("hw.optional.arm.FEAT_DotProd"))
+        {
+            flags |= X265_CPU_NEON_DOTPROD;
+        }
+    #endif
+    #if HAVE_NEON_I8MM
+        if (have_feature("hw.optional.arm.FEAT_I8MM"))
+        {
+            flags |= X265_CPU_NEON_I8MM;
+        }
+    #endif
+
+    return flags;
+}
+
+#elif defined(_MSC_VER) || defined(__MINGW32__) // end __APPLE__
+
+uint32_t cpu_detect(bool unused)
+{
+    int flags = 0;
+
+    #if HAVE_NEON
+        flags |= X265_CPU_NEON;  // Neon is mandatory in Armv8.0-A.
+    #endif
+
+    #if HAVE_NEON_DOTPROD
+    // Support for PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE was added in Windows SDK
+    // 20348, supported by Windows 11 and Windows Server 2022.
+        #if defined(PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE)
+            if (IsProcessorFeaturePresent(PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE))
+            {
+                flags |= X265_CPU_NEON_DOTPROD;
+            }
+        #endif  // defined(PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE)
+    #endif  // HAVE_NEON_DOTPROD
+    // No I8MM or SVE feature detection available on Windows at time of writing.
+
+    return flags;
+}
+
+#endif
+
 #elif X265_ARCH_POWER8
 
 uint32_t cpu_detect(bool benableavx512)
-- 
2.39.3 (Apple Git-146)


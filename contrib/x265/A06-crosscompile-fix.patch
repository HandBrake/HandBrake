diff --git a/source/CMakeLists.txt b/source/CMakeLists.txt
index ab5ddfeb7..88693a3da 100755
--- a/source/CMakeLists.txt
+++ b/source/CMakeLists.txt
@@ -80,12 +80,13 @@ elseif(ARMMATCH GREATER "-1")
     set(ARM 1)
     add_definitions(-DX265_ARCH_ARM=1 -DHAVE_ARMV6=1)
 elseif(ARM64MATCH GREATER "-1")
-    #if(CROSS_COMPILE_ARM64)
-        #message(STATUS "Cross compiling for ARM64 arch")
-    #else()
-        #set(CROSS_COMPILE_ARM64 0)
-    #endif()
-    message(STATUS "Detected ARM64 target processor")
+    list(FIND ARM64_ALIASES "${CMAKE_HOST_SYSTEM_PROCESSOR}" NATIVE_ARCH)
+    if(NATIVE_ARCH EQUAL "-1")
+        message(STATUS "Cross compiling for ARM64 arch")
+        set(CROSS_COMPILE_ARM64 1)
+    else()
+        set(CROSS_COMPILE_ARM64 0)
+    endif()
     set(ARM64 1)
     add_definitions(-DX265_ARCH_ARM64=1 -DHAVE_NEON)
 else()
@@ -274,9 +275,15 @@ if(GCC)
             set(ARM_ARGS -O3 -march=armv8-a+sve -fPIC -flax-vector-conversions)
             add_definitions(-DHAVE_SVE)
             add_definitions(-DHAVE_NEON) # for NEON c/c++ primitives, as currently there is no implementation that use SVE
-        elseif(CPU_HAS_NEON)
+        elseif(CPU_HAS_NEON OR CROSS_COMPILE_ARM64)
             message(STATUS "Found NEON")
-            set(ARM_ARGS -fPIC -flax-vector-conversions)
+            if (MINGW)
+                set(ARM_ARGS -flax-vector-conversions)
+            elseif(APPLE)
+                set(ARM_ARGS -fPIC -flax-vector-conversions -arch ${CMAKE_OSX_ARCHITECTURES})
+            else()
+                set(ARM_ARGS -fPIC -flax-vector-conversions)
+            endif()
             add_definitions(-DHAVE_NEON)
         else()
             set(ARM_ARGS -fPIC -flax-vector-conversions)

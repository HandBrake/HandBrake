
---
 source/common/threadpool.cpp | 38 +++++++++++++++++++++++++++++++++++-
 1 file changed, 37 insertions(+), 1 deletion(-)

diff --git a/source/common/threadpool.cpp b/source/common/threadpool.cpp
index 2db7a146b..0013fa0c8 100644
--- a/source/common/threadpool.cpp
+++ b/source/common/threadpool.cpp
@@ -25,6 +25,7 @@
 #include "common.h"
 #include "threadpool.h"
 #include "threading.h"
+#include <string>
 
 #include <new>
 
@@ -659,6 +660,27 @@ int ThreadPool::getCpuCount()
 #endif
 }
 
+#if _WIN32 && X265_ARCH_ARM64
+
+bool checkSnapdragon()
+{
+
+    char processorName[128];
+    DWORD bufferSize = 128;
+
+    LONG result = RegGetValue(HKEY_LOCAL_MACHINE,"HARDWARE\\DESCRIPTION\\System\\CentralProcessor\\0", "ProcessorNameString", RRF_RT_ANY,NULL,(PVOID)&processorName,&bufferSize);
+    if (strstr(processorName, "Snapdragon") != NULL)
+    {
+        return true;
+    }
+    else
+    {
+        return false;
+    }
+}
+
+#endif
+
 void ThreadPool::getFrameThreadsCount(x265_param* p, int cpuCount)
 {
     int rows = (p->sourceHeight + p->maxCUSize - 1) >> g_log2Size[p->maxCUSize];
@@ -667,9 +689,23 @@ void ThreadPool::getFrameThreadsCount(x265_param* p, int cpuCount)
     else if (cpuCount >= 32)
         p->frameNumThreads = (p->sourceHeight > 2000) ? 6 : 5; 
     else if (cpuCount >= 16)
-        p->frameNumThreads = 4; 
+#if MACOS && X265_ARCH_ARM64
+        p->frameNumThreads = 16;
+#else
+        p->frameNumThreads = 4;
+#endif
+
+#if _WIN32 && X265_ARCH_ARM64
+    else if (checkSnapdragon() && cpuCount >= 8)
+        p->frameNumThreads = cpuCount;
+#endif
+
     else if (cpuCount >= 8)
+#if MACOS && X265_ARCH_ARM64
+        p->frameNumThreads = 8;
+#else
         p->frameNumThreads = 3;
+#endif
     else if (cpuCount >= 4)
         p->frameNumThreads = 2;
     else
-- 
2.43.0.windows.1


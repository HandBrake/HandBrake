git:
  depth: 1

matrix:
  include:
    - name: "Xenial"
      os: linux
      dist: xenial
    - name: "Xenial - Windows Cross-Compilation (x86_64)"
      env: CROSS=x86_64-w64-mingw32 PATH=${HOME}/toolchains/mingw-w64-x86_64/bin:${PATH}
      os: linux
      dist: xenial
    - name: "MacOS"
      os: osx
      env: PATH=${HOME}/bin:${HOME}/toolchains/mac/bin:${PATH}
      osx_image: xcode10.1
      nv: PATH=${HOME}/bin:${HOME}/toolchains/mac/bin:${PATH}

before_install:
- |
  # prints continuous output to avoid timeouts on build systems like Travis
  function display_progress {
      local str=""
      while [ "$(ps a | awk '{print $1}' | grep ${1})" ]; do
          printf "%c" "$str"
          sleep 1
          str="."
      done
  }

  # kills child processes
  function die_gracefully {
      trap - EXIT INT
      trap ":" INT  # prevent recursion due to spamming ctrl-c
      echo ""
      trap - TERM && kill -- -$$
  }
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]
  then
    sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    sudo apt-get update -qq
    sudo apt-get install -qq alien autoconf automake build-essential cmake g++-8 gcc-8 git \
      libass-dev libbz2-dev libfontconfig1-dev libfreetype6-dev libfribidi-dev \
      libharfbuzz-dev libjansson-dev liblzma-dev libmp3lame-dev libogg-dev \
      libopus-dev libsamplerate-dev libspeex-dev libtheora-dev libtool \
      libtool-bin libvorbis-dev libvpx-dev libx264-dev libxml2-dev m4 make \
      ninja-build patch pkg-config python python3 python3-pip \
      python3-setuptools tar yasm zlib1g-dev
    sudo apt-get install -qq intltool libappindicator-dev libdbus-glib-1-dev \
      libglib2.0-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
      libgtk-3-dev libgudev-1.0-dev libnotify-dev libwebkitgtk-3.0-dev
    sudo apt-get remove mingw-w64* -y
    sudo apt-get autoremove -y
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]
  then
    # xenial does not have meson version >=0.47.0 in apt
    sudo pip3 install meson
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" ]]
  then
    # xenial does not have nasm version >=2.13 in apt
    wget https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/linux/nasm-2.14.02-0.fc27.x86_64.rpm
    sudo alien nasm-2.14.02-0.fc27.x86_64.rpm
    sudo dpkg -i nasm_2.14.02-1_amd64.deb
  fi

# Windows cross-compile toolchain and requirements
- |
  if [[ "$CROSS" == "x86_64-w64-mingw32" ]]
  then
    sudo apt-get install -qq bison bzip2 flex g++ g++-8 gzip pax
    # Xenial's gcc is too old for cross-compile needs
    sudo rm /usr/bin/gcc
    sudo ln -s /usr/bin/gcc-8 /usr/bin/gcc
    sudo rm /usr/bin/g++
    sudo ln -s /usr/bin/g++-8 /usr/bin/g++
  fi
- |
  if [[ "$CROSS" == "x86_64-w64-mingw32" ]]
  then
    if sha256sum --status -c ~/toolchains/sha256sum_win.txt
    then
      echo "Toolchain has not changed, using previous compiled bins from cache..."
    else
      echo "Toolchain differs from one in cache (or malformed checksum file), recompiling..."
      ./scripts/mingw-w64-build x86_64 ~/toolchains/
      sha256sum ${TRAVIS_BUILD_DIR}/scripts/mingw-w64-build > ~/toolchains/sha256sum_win.txt
    fi
  fi

# MacOS Toolchain and requirements. `sha256sum` is `shasum -a` in MacOS world
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]
  then
    if shasum -a 256 --check ~/toolchains/sha256sum_mac.txt
    then
      echo "Toolchain has not changed, using previous compiled bins from cache..."
    else
      echo "Toolchain differs from one in cache (or malformed checksum file), recompiling..."
      ./scripts/mac-toolchain-build ~/toolchains/
      shasum -a 256 ${TRAVIS_BUILD_DIR}/scripts/mac-toolchain-build > ~/toolchains/sha256sum_mac.txt
    fi
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" && ! -f ~/bin/nasm ]]
  then
    wget https://www.nasm.us/pub/nasm/releasebuilds/2.14/nasm-2.14.tar.gz
    tar xvfz nasm-2.14.tar.gz
    cd nasm-2.14/
    ./configure --prefix=$HOME
    make -j 2
    make install -j 2
  fi

language: c

script:
- |
  if [[ "$CROSS" == "x86_64-w64-mingw32" ]]
  then
    whereis x86_64-w64-mingw32-gcc
    cd ${TRAVIS_BUILD_DIR}
    ./configure --cross=$CROSS --enable-qsv --enable-vce --enable-nvenc --launch --launch-jobs=2
  fi
- |
  if [[ "$TRAVIS_OS_NAME" == "linux" && ! $CROSS ]]
  then
    cd ${TRAVIS_BUILD_DIR}
    ./configure --disable-gtk --disable-gst --launch --launch-jobs=2
  fi
# `make` prints >4MB of output which forces TravisCI to abort. We print progress dots instead
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]
  then
    cd ${TRAVIS_BUILD_DIR}
    ./configure
    cd build
    trap die_gracefully EXIT INT TERM
    echo "Building for OSX:"
    make > /dev/null &
    PID=$!
    display_progress "${PID}"
    wait "${PID}" || CODE=$?
    trap - EXIT INT TERM
    if [[ "${CODE}" -ne 0 ]]; then
      echo ""
      echo "error: make returned non-zero error code (${CODE})" >&2
      exit 1
    fi
    echo "Finished! Successfully built for macOS"
  fi

cache:
  directories:
    - $HOME/toolchains
    - $HOME/bin

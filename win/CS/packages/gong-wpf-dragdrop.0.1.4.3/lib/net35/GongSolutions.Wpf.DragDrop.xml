<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GongSolutions.Wpf.DragDrop</name>
    </assembly>
    <members>
        <member name="T:GongSolutions.Wpf.DragDrop.IDragSource">
            <summary>
            Interface implemented by Drag Handlers.
            </summary>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.IDragSource.StartDrag(GongSolutions.Wpf.DragDrop.IDragInfo)">
            <summary>
            Queries whether a drag can be started.
            </summary>
            
            <param name="dragInfo">
            Information about the drag.
            </param>
            
            <remarks>
            To allow a drag to be started, the <see cref="P:GongSolutions.Wpf.DragDrop.DragInfo.Effects"/> property on <paramref name="dragInfo"/> 
            should be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/>. 
            </remarks>
        </member>
        <!-- Ungültiger XML-Kommentar wurde für den Member 'M:GongSolutions.Wpf.DragDrop.IDragSource.CanStartDrag(GongSolutions.Wpf.DragDrop.IDragInfo)' ignoriert -->
        <member name="M:GongSolutions.Wpf.DragDrop.IDragSource.Dropped(GongSolutions.Wpf.DragDrop.IDropInfo)">
            <summary>
            Notifies the drag handler that a drop has occurred.
            </summary>
            
            <param name="dropInfo">
              Information about the drop.
            </param>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.IDragSource.DragCancelled">
            <summary>
            Notifies the drag handler that a drag has been aborted.
            </summary>
        </member>
        <member name="T:GongSolutions.Wpf.DragDrop.IDropTarget">
            <summary>
            Interface implemented by Drop Handlers.
            </summary>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.IDropTarget.DragOver(GongSolutions.Wpf.DragDrop.IDropInfo)">
            <summary>
            Updates the current drag state.
            </summary>
            
            <param name="dropInfo">
              Information about the drag.
            </param>
            
            <remarks>
            To allow a drop at the current drag position, the <see cref="P:GongSolutions.Wpf.DragDrop.DropInfo.Effects"/> property on 
            <paramref name="dropInfo"/> should be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/>
            and <see cref="P:GongSolutions.Wpf.DragDrop.DropInfo.Data"/> should be set to a non-null value.
            </remarks>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.IDropTarget.Drop(GongSolutions.Wpf.DragDrop.IDropInfo)">
            <summary>
            Performs a drop.
            </summary>
            
            <param name="dropInfo">
              Information about the drop.
            </param>
        </member>
        <member name="F:GongSolutions.Wpf.DragDrop.DragDrop.DragMouseAnchorPointProperty">
            <summary>
            DragMouseAnchorPoint defines the horizontal and vertical proportion at which the pointer will anchor on the DragAdorner.
            </summary>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.DragDrop.TryGetDragHandler(GongSolutions.Wpf.DragDrop.DragInfo,System.Windows.UIElement)">
            <summary>
            Gets the drag handler from the drag info or from the sender, if the drag info is null
            </summary>
            <param name="dragInfo">the drag info object</param>
            <param name="sender">the sender from an event, e.g. mouse down, mouse move</param>
            <returns></returns>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.DragDrop.TryGetDropHandler(GongSolutions.Wpf.DragDrop.DropInfo,System.Windows.UIElement)">
            <summary>
            Gets the drop handler from the drop info or from the sender, if the drop info is null
            </summary>
            <param name="dropInfo">the drop info object</param>
            <param name="sender">the sender from an event, e.g. drag over</param>
            <returns></returns>
        </member>
        <member name="T:GongSolutions.Wpf.DragDrop.DragInfo">
            <summary>
            Holds information about a the source of a drag drop operation.
            </summary>
            
            <remarks>
            The <see cref="T:GongSolutions.Wpf.DragDrop.DragInfo"/> class holds all of the framework's information about the source
            of a drag. It is used by <see cref="M:GongSolutions.Wpf.DragDrop.IDragSource.StartDrag(GongSolutions.Wpf.DragDrop.IDragInfo)"/> to determine whether a drag 
            can start, and what the dragged data should be.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.Data">
            <summary>
            Gets or sets the drag data.
            </summary>
            
            <remarks>
            This must be set by a drag handler in order for a drag to start.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.DragStartPosition">
            <summary>
            Gets the position of the click that initiated the drag, relative to <see cref="P:GongSolutions.Wpf.DragDrop.IDragInfo.VisualSource"/>.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.PositionInDraggedItem">
            <summary>
            Gets the point where the cursor was relative to the item being dragged when the drag was started.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.Effects">
            <summary>
            Gets or sets the allowed effects for the drag.
            </summary>
            
            <remarks>
            This must be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/> by a drag handler in order 
            for a drag to start.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.MouseButton">
            <summary>
            Gets the mouse button that initiated the drag.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.SourceCollection">
            <summary>
            Gets the collection that the source ItemsControl is bound to.
            </summary>
            
            <remarks>
            If the control that initated the drag is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.SourceIndex">
            <summary>
            Gets the position from where the item was dragged.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.SourceItem">
            <summary>
            Gets the object that a dragged item is bound to.
            </summary>
            
            <remarks>
            If the control that initated the drag is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.SourceItems">
            <summary>
            Gets a collection of objects that the selected items in an ItemsControl are bound to.
            </summary>
            
            <remarks>
            If the control that initated the drag is unbound or not an ItemsControl, this will be empty.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.VisualSource">
            <summary>
            Gets the control that initiated the drag.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.VisualSourceItem">
            <summary>
            Gets the item in an ItemsControl that started the drag.
            </summary>
            
            <remarks>
            If the control that initiated the drag is an ItemsControl, this property will hold the item
            container of the clicked item. For example, if <see cref="P:GongSolutions.Wpf.DragDrop.IDragInfo.VisualSource"/> is a ListBox this
            will hold a ListBoxItem.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.VisualSourceFlowDirection">
            <summary>
            Gets the FlowDirection of the current drag source.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDragInfo.DataObject">
            <summary>
            Gets the <see cref="T:System.Windows.IDataObject"/> which is used by the drag and drop operation. Set it to
            a custom instance if custom drag and drop behavior is needed.
            </summary>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.DragInfo.#ctor(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Initializes a new instance of the DragInfo class.
            </summary>
            
            <param name="sender">
            The sender of the mouse event that initiated the drag.
            </param>
            
            <param name="e">
            The mouse event that initiated the drag.
            </param>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.Data">
            <summary>
            Gets or sets the drag data.
            </summary>
            
            <remarks>
            This must be set by a drag handler in order for a drag to start.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.DragStartPosition">
            <summary>
            Gets the position of the click that initiated the drag, relative to <see cref="P:GongSolutions.Wpf.DragDrop.DragInfo.VisualSource"/>.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.PositionInDraggedItem">
            <summary>
            Gets the point where the cursor was relative to the item being dragged when the drag was started.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.Effects">
            <summary>
            Gets or sets the allowed effects for the drag.
            </summary>
            
            <remarks>
            This must be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/> by a drag handler in order 
            for a drag to start.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.MouseButton">
            <summary>
            Gets the mouse button that initiated the drag.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.SourceCollection">
            <summary>
            Gets the collection that the source ItemsControl is bound to.
            </summary>
            
            <remarks>
            If the control that initated the drag is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.SourceIndex">
            <summary>
            Gets the position from where the item was dragged.
            </summary>
            <value>The index of the source.</value>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.SourceItem">
            <summary>
            Gets the object that a dragged item is bound to.
            </summary>
            
            <remarks>
            If the control that initated the drag is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.SourceItems">
            <summary>
            Gets a collection of objects that the selected items in an ItemsControl are bound to.
            </summary>
            
            <remarks>
            If the control that initated the drag is unbound or not an ItemsControl, this will be empty.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.VisualSource">
            <summary>
            Gets the control that initiated the drag.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.VisualSourceItem">
            <summary>
            Gets the item in an ItemsControl that started the drag.
            </summary>
            
            <remarks>
            If the control that initiated the drag is an ItemsControl, this property will hold the item
            container of the clicked item. For example, if <see cref="P:GongSolutions.Wpf.DragDrop.DragInfo.VisualSource"/> is a ListBox this
            will hold a ListBoxItem.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.VisualSourceFlowDirection">
            <summary>
            Gets the FlowDirection of the current drag source.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DragInfo.DataObject">
            <summary>
            Gets the <see cref="T:System.Windows.IDataObject"/> which is used by the drag and drop operation. Set it to
            a custom instance if custom drag and drop behavior is needed.
            </summary>
        </member>
        <member name="T:GongSolutions.Wpf.DragDrop.DropInfo">
            <summary>
            Holds information about a the target of a drag drop operation.
            </summary>
            
            <remarks>
            The <see cref="T:GongSolutions.Wpf.DragDrop.DropInfo"/> class holds all of the framework's information about the current 
            target of a drag. It is used by <see cref="M:GongSolutions.Wpf.DragDrop.IDropTarget.DragOver(GongSolutions.Wpf.DragDrop.IDropInfo)"/> method to determine whether 
            the current drop target is valid, and by <see cref="M:GongSolutions.Wpf.DragDrop.IDropTarget.Drop(GongSolutions.Wpf.DragDrop.IDropInfo)"/> to perform the drop.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.Data">
            <summary>
            Gets the drag data.
            </summary>
            
            <remarks>
            If the drag came from within the framework, this will hold:
            
            - The dragged data if a single item was dragged.
            - A typed IEnumerable if multiple items were dragged.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.DragInfo">
            <summary>
            Gets a <see cref="P:GongSolutions.Wpf.DragDrop.IDropInfo.DragInfo"/> object holding information about the source of the drag, 
            if the drag came from within the framework.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.DropPosition">
            <summary>
            Gets the mouse position relative to the VisualTarget
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.DropTargetAdorner">
            <summary>
            Gets or sets the class of drop target to display.
            </summary>
            
            <remarks>
            The standard drop target adorner classes are held in the <see cref="T:GongSolutions.Wpf.DragDrop.DropTargetAdorners"/>
            class.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.Effects">
            <summary>
            Gets or sets the allowed effects for the drop.
            </summary>
            
            <remarks>
            This must be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/> by a drop handler in order 
            for a drop to be possible.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.InsertIndex">
            <summary>
            Gets the current insert position within <see cref="P:GongSolutions.Wpf.DragDrop.IDropInfo.TargetCollection"/>.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.TargetCollection">
            <summary>
            Gets the collection that the target ItemsControl is bound to.
            </summary>
            
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.TargetItem">
            <summary>
            Gets the object that the current drop target is bound to.
            </summary>
            
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.TargetGroup">
            <summary>
            Gets the current group target.
            </summary>
            
            <remarks>
            If the drag is currently over an ItemsControl with groups, describes the group that
            the drag is currently over.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.VisualTarget">
            <summary>
            Gets the control that is the current drop target.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.VisualTargetItem">
            <summary>
            Gets the item in an ItemsControl that is the current drop target.
            </summary>
            
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.VisualTargetOrientation">
            <summary>
            Gets the orientation of the current drop target.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.VisualTargetFlowDirection">
            <summary>
            Gets the FlowDirection of the current drop target.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.DestinationText">
            <summary>
            Gets and sets the text displayed in the DropDropEffects adorner.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.InsertPosition">
            <summary>
            Gets the relative position the item will be inserted to compared to the TargetItem
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.KeyStates">
            <summary>
            Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.IDropInfo.NotHandled">
            <summary>
            Indicates if the drop info should be handled by itself (useful for child elements)
            </summary>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.DropInfo.#ctor(System.Object,System.Windows.DragEventArgs,GongSolutions.Wpf.DragDrop.DragInfo)">
            <summary>
            Initializes a new instance of the DropInfo class.
            </summary>
            
            <param name="sender">
            The sender of the drag event.
            </param>
            
            <param name="e">
            The drag event.
            </param>
            
            <param name="dragInfo">
            Information about the source of the drag, if the drag came from within the framework.
            </param>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.Data">
            <summary>
            Gets the drag data.
            </summary>
            
            <remarks>
            If the drag came from within the framework, this will hold:
            
            - The dragged data if a single item was dragged.
            - A typed IEnumerable if multiple items were dragged.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.DragInfo">
            <summary>
            Gets a <see cref="P:GongSolutions.Wpf.DragDrop.DropInfo.DragInfo"/> object holding information about the source of the drag, 
            if the drag came from within the framework.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.DropPosition">
            <summary>
            Gets the mouse position relative to the VisualTarget
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.DropTargetAdorner">
            <summary>
            Gets or sets the class of drop target to display.
            </summary>
            
            <remarks>
            The standard drop target adorner classes are held in the <see cref="T:GongSolutions.Wpf.DragDrop.DropTargetAdorners"/>
            class.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.Effects">
            <summary>
            Gets or sets the allowed effects for the drop.
            </summary>
            
            <remarks>
            This must be set to a value other than <see cref="F:System.Windows.DragDropEffects.None"/> by a drop handler in order 
            for a drop to be possible.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.InsertIndex">
            <summary>
            Gets the current insert position within <see cref="P:GongSolutions.Wpf.DragDrop.DropInfo.TargetCollection"/>.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.TargetCollection">
            <summary>
            Gets the collection that the target ItemsControl is bound to.
            </summary>
            
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.TargetItem">
            <summary>
            Gets the object that the current drop target is bound to.
            </summary>
            
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.TargetGroup">
            <summary>
            Gets the current group target.
            </summary>
            
            <remarks>
            If the drag is currently over an ItemsControl with groups, describes the group that
            the drag is currently over.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.VisualTarget">
            <summary>
            Gets the control that is the current drop target.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.VisualTargetItem">
            <summary>
            Gets the item in an ItemsControl that is the current drop target.
            </summary>
            
            <remarks>
            If the current drop target is unbound or not an ItemsControl, this will be null.
            </remarks>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.VisualTargetOrientation">
            <summary>
            Gets the orientation of the current drop target.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.VisualTargetFlowDirection">
            <summary>
            Gets the orientation of the current drop target.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.DestinationText">
            <summary>
            Gets and sets the text displayed in the DropDropEffects adorner.
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.InsertPosition">
            <summary>
            Gets the relative position the item will be inserted to compared to the TargetItem
            </summary>
        </member>
        <member name="P:GongSolutions.Wpf.DragDrop.DropInfo.KeyStates">
            <summary>
            Gets a flag enumeration indicating the current state of the SHIFT, CTRL, and ALT keys, as well as the state of the mouse buttons.
            </summary>
        </member>
        <member name="T:GongSolutions.Wpf.DragDrop.Icons.IconFactory">
            <summary>
            Static class to provide access to standard application images
            </summary>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.Icons.IconFactory.GetImage(System.String,System.Int32)">
            <summary>
            Loads an image based on the name and size required.
            Images need to be marked as 'Resource' in the project for them be loaded.
            </summary>
            <param name="iconName">Name of the icon</param>
            <param name="size">The size of the icon</param>
            <returns>The image to be displayed</returns>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.Utilities.HitTestUtilities.IsNotPartOfSender(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            thx to @osicka from issue #84
            
            e.g. original source is part of a popup (e.g. ComboBox drop down), the hit test needs to be done on the original source.
            Because the popup is not attached to the visual tree of the sender.
            This function test this by looping back from the original source to the sender and if it didn't end up at the sender stopped the drag.
            </summary>
        </member>
        <member name="M:GongSolutions.Wpf.DragDrop.Utilities.VisualTreeExtensions.GetVisualAncestor(System.Windows.DependencyObject,System.Type,System.Windows.Controls.ItemsControl)">
            <summary>
            find the visual ancestor by type and go through the visual tree until the given itemsControl will be found
            </summary>
        </member>
    </members>
</doc>

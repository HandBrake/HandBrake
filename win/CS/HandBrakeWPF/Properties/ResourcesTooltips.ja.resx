<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="FilterView_Deblock" xml:space="preserve">
    <value>デブロックは低品質で圧縮されたときに生じるブロック状のノイズを低減します。</value>
  </data>
  <data name="FilterView_DecombDeinterlace" xml:space="preserve">
    <value>decombやデインターレースのフィルターオプションを選んでください。

decombフィルターはインターレースであると思われるフレームを選択的にインターレース除去します。
これはインターレースでないフレームの品質を守ることにもなります。

古いインターレース除去フィルターは全てのフレームに適用します。
インターレースでないフレームはいくらか品質が劣化するでしょう。</value>
  </data>
  <data name="FilterView_Denoise" xml:space="preserve">
    <value>デノイズはノイズやざらつきを軽減/除去します。圧縮効率を高め、高い品質の映像を小さいファイルサイズで実現することが可能です。
過度に強いデノイズ設定は細部を損ない画質を落とします。

NLMeansは速度を犠牲にした高い品質のデノイズフィルターです。速度より品質が重要である場合に使用してください。

HQDN3Dは適応性ローパスフィルターで、NLMeansよりは高速ですが細部を残す効果に劣ります。</value>
  </data>
  <data name="FilterView_Detelecine" xml:space="preserve">
    <value>逆テレシネは、フィルムのフレームレートをテレビのフレームレートに変換した際に発生する、テレシネによる櫛状のノイズを除去します。</value>
  </data>
  <data name="FilterView_Grayscale" xml:space="preserve">
    <value>グレースケールは映像の色成分を除去します。モノクロ動画と呼ばれるものです。</value>
  </data>
  <data name="MainView_Destination" xml:space="preserve">
    <value>ディレクトリとファイル名を含む、保存先のパスです。ここに新しいビデオが作られ、名前が付けられます。</value>
  </data>
  <data name="MainView_IpodAtom" xml:space="preserve">
    <value>2006年ごろの第5世代iPod向けに特別なMP4マーカーを追加します。他の設定は互換性に影響するでしょう。</value>
  </data>
  <data name="MainView_Mux" xml:space="preserve">
    <value>コンテナの形式です。映像、音声、その他のトラックはこの形式で一つにまとめられます。互換性に影響します。</value>
  </data>
  <data name="MainView_Optimise" xml:space="preserve">
    <value>MP4をプログレッシブダウンロードに最適化します。エンコードされるとネットワーク越しに、全体をダウンロードする必要なく、すぐ再生できるようデータが再構築されます。</value>
  </data>
  <data name="MainView_Range" xml:space="preserve">
    <value>ソースの範囲の選択です。既定では、チャプターは全て選択され、ソースの全てがエンコードされます。</value>
  </data>
  <data name="MainView_Title" xml:space="preserve">
    <value>エンコードするタイトル、またはビデオクリップです。
Blu-rayやDVDソースはしばしば複数のタイトルを含み、典型的には一番長いものが本編です。</value>
  </data>
  <data name="PictureSettingsView_Anamorphic" xml:space="preserve">
    <value>Anamorphic allows arbitrary storage dimensions while preserving the original aspect during playback.

None disables anamorphic. Video storage dimensions and display dimensions will be identical. Only useful for compatibility with certain legacy devices.

Automatic maximizes storage resolution while preserving the original display aspect ratio. Recommended.

Loose is similar to Auto, but attempts to preserve the storage aspect ratio. This can result in a slight storage resolution loss compared to Auto.

Custom allows manually setting all parameters. Useful for correcting an incorrect source display aspect and for professionals needing advanced control in post-production.</value>
  </data>
  <data name="PictureSettingsView_AutoCrop" xml:space="preserve">
    <value>映像の周りにある黒い線を自動でクロップします。</value>
  </data>
  <data name="PictureSettingsView_CropBottom" xml:space="preserve">
    <value>映像の下側を切り取ります。</value>
  </data>
  <data name="PictureSettingsView_CropLeft" xml:space="preserve">
    <value>映像の左側を切り取ります。</value>
  </data>
  <data name="PictureSettingsView_CropRight" xml:space="preserve">
    <value>映像の右側を切り取ります。</value>
  </data>
  <data name="PictureSettingsView_CropTop" xml:space="preserve">
    <value>映像の上側を切り取ります。</value>
  </data>
  <data name="PictureSettingsView_Height" xml:space="preserve">
    <value>これは保存される映像の高さです。
ピクセルアスペクト比が 1：1 でなければ、実際に表示されるサイズは異なります。</value>
  </data>
  <data name="PictureSettingsView_ManualCrop" xml:space="preserve">
    <value>手入力で映像を切り取ります。</value>
  </data>
  <data name="PictureSettingsView_Modulus" xml:space="preserve">
    <value>この値の掛け算のサイズで格納されます。

この設定はいくつかのデバイスと互換性を維持するために必要です。
問題がなければ2を使用してください。</value>
  </data>
  <data name="PictureSettingsView_PAR" xml:space="preserve">
    <value>ピクセルアスペクトはピクセルの形を定義します。
比率1:1は正方形のピクセルを意味します。それ以外の値は長方形です。
指定されたアスペクト比にするため、プレーヤーが映像を拡大縮小します。</value>
  </data>
  <data name="PictureSettingsView_Width" xml:space="preserve">
    <value>これは保存される映像の幅です。
ピクセルアスペクト比が 1：1 でなければ、実際に表示されるサイズは異なります。</value>
  </data>
  <data name="QueueView_DeleteJob" xml:space="preserve">
    <value>キューからジョブを削除します。</value>
  </data>
  <data name="QueueView_ResetJobStatus" xml:space="preserve">
    <value>ジョブの状態を待ちにする。</value>
  </data>
  <data name="QueueView_SendJobBack" xml:space="preserve">
    <value>編集のためにジョブをメインウィンドウに戻します。</value>
  </data>
  <data name="Video_AvgBitrate" xml:space="preserve">
    <value>平均ビットレートを設定します。

瞬間ビットレートははるかに高くか低くなる可能性があります。
しかし長い時間で見た平均の値はここで設定します。
もし瞬間ビットレートを制限したい場合は、x264の vbv-bufsize と vbv-maxrate 設定を見てください。</value>
  </data>
  <data name="Video_ConstantFramerate" xml:space="preserve">
    <value>固定フレームレートでの出力を有効にします。</value>
  </data>
  <data name="Video_Encoders" xml:space="preserve">
    <value>利用できるビデオエンコーダーです。</value>
  </data>
  <data name="Video_EncoderTune" xml:space="preserve">
    <value>典型例に合わせて最適な設定を選んでください。

ソースの特徴や目的の出力に合わせて効率を上げることができます。
変更はプリセットの後、ほかの全てのパラメーターの前に適用されます。</value>
  </data>
  <data name="Video_ExtraOpts" xml:space="preserve">
    <value>追加のエンコード設定です。

コロンで区切られたエンコーダオプションの一覧です。</value>
  </data>
  <data name="Video_FastDecode" xml:space="preserve">
    <value>デコーダのCPU使用率を減らします。

再生に問題があるようであればこれを使用してください。 (フレーム落ちなど)</value>
  </data>
  <data name="Video_Framerate" xml:space="preserve">
    <value>出力フレームレートです。

'ソースと同じ'が推奨されます。ソース映像が可変フレームレートであった場合、'ソースと同じ'はそれを保存します。</value>
  </data>
  <data name="Video_Level" xml:space="preserve">
    <value>特定のレベルを設定します。

他の全ての設定を上書きします。</value>
  </data>
  <data name="Video_PeakFramerate" xml:space="preserve">
    <value>フレームレート設定を最大値とした可変フレームレートの出力を有効にします。</value>
  </data>
  <data name="Video_Presets" xml:space="preserve">
    <value>エンコーダー設定を調節して圧縮効率とエンコード速度のバランスを取ります。

これは基本のエンコーダー設定です。
チューニング、プロファイル、レベルと追加のオプションはこれに適用されます。
品質がより高く、小さいファイルになるよう、通常は可能な限り遅いものを選ぶことをお勧めします。</value>
  </data>
  <data name="Video_Profile" xml:space="preserve">
    <value>特定のプロファイルを設定します。

他の全ての設定を上書きします。</value>
  </data>
  <data name="Video_Quality" xml:space="preserve">
    <value>お望みのクオリティを設定します。
指定されたクオリティに沿ってエンコードされます。
単位はそれぞれのビデオエンコーダーによって異なります。

x264は対数スケールで低い値が高いクオリティに対応します。
なので値を少し下げるだけで、出力されるファイルサイズの変化は
それよりはるかに大きくなります。0の値はロスレスを意味し、
ソースもロスレスでなければ、ファイルサイズは
元のソースよりも大きくなるでしょう。
推奨される値は: スタンダード画質のもので18から20、高画質のもので20から23です。

FFMpegとTheoraのスケールはより直線的です。
この二つにはロスレスモードはありません。</value>
  </data>
  <data name="Video_TurboFirstPass" xml:space="preserve">
    <value>2パスエンコードのうちの最初のパスの、速度に関わる設定です。</value>
  </data>
  <data name="Video_TwoPass" xml:space="preserve">
    <value>2パスエンコードを行います。

'ビットレート'オプションがまず必要です。1パス目で映像の統計を取得します。
それから2パス目で、目的のビットレートを実現するために
その統計が使用されます。</value>
  </data>
  <data name="Video_VariableFramerate" xml:space="preserve">
    <value>可変フレームレートの出力を有効にします。

いくつかのプレイヤーには対応していません。</value>
  </data>
  <data name="MainView_WhenDone" xml:space="preserve">
    <value>HandBrakeが現在のキューやエンコードを完了した時にこのアクションを実行します。</value>
  </data>
  <data name="MainView_Browse" xml:space="preserve">
    <value>エンコード用に保存先パスとファイル名を参照して選択してください。</value>
  </data>
  <data name="MainView_Angle" xml:space="preserve">
    <value>エンコードする映像のアングルです。複数アングルを持つDVDとBlu-ray用です。</value>
  </data>
  <data name="MainView_AddPreset" xml:space="preserve">
    <value>新しいプリセットを追加します。</value>
  </data>
  <data name="MainView_PresetAdditionalOptions" xml:space="preserve">
    <value>追加のプリセットのオプションです。</value>
  </data>
  <data name="MainView_Presets" xml:space="preserve">
    <value>プリセットは特定の用途向けに決められた設定の集まりです。望むものに一番近いものを選択してください。

全てのエンコーダ設定を上書きします。プリセットを選択した後に追加の調整を設定することができます。</value>
  </data>
  <data name="MainView_RemovePreset" xml:space="preserve">
    <value>選択したプリセットを削除します。</value>
  </data>
  <data name="SourceSelection_TitleSpecific" xml:space="preserve">
    <value>全タイトルの代わりに特定のタイトルのみスキャンする。</value>
  </data>
  <data name="FilterView_CustomDenoiseParams" xml:space="preserve">
    <value>デノイズのカスタムパラメーターです。
 
NLMeans syntax: y-strength=y:y-origin-tune=y:y-patch-size=y:y-range=y:y-frame-count=y:y-prefilter=y:cb-strength=c:cb-origin-tune=c:cb-patch-size=c:cb-range=c:cb-frame-count=c:cb-prefilter=c:cr-strength=c:cr-origin-tune=c:cr-patch-size=c:cr-range=c:cr-frame-count=c:cr-prefilter=c:threads=t

NLMeans default: y-strength=6:y-origin-tune=1:y-patch-size=7:y-range=3:y-frame-count=2:y-prefilter=0:cb-strength=6:cb-origin-tune=1:cb-patch-size=7:cb-range=3:cb-frame-count=2:cb-prefilter=0

HQDN3D syntax: y-spatial=y:cb-spatial=c:cr-spatial=c:y-temporal=y:cb-temporal=c:cr-temporal=c

HQDN3D default: y-spatial=3:cb-spatial=2:cr-spatial=2:y-temporal=2:cb-temporal=3:cr-temporal=3</value>
  </data>
  <data name="FilterView_DenoisePreset" xml:space="preserve">
    <value>デノイズフィルターのプリセットです。フィルターの強さを設定します。</value>
  </data>
  <data name="FilterView_DenoiseTune" xml:space="preserve">
    <value>デノイズのチューニングです。デノイズプリセットを特別な状況向けに最適な設定に調整できます。

- なしは既定のプリセット設定を使用します。

- Filmは実写向けに使用するよう設定を洗練します。

- Grainはカラーチャンネルのみに処理をします。色ノイズを低減除去しながら、フィルムのような明るいちらつきを残すのに有用です。

- High Motionは動きのあるシーンでの色のにじみをカラーチャンネルへの時短的な処理を避けることによって低減します。スポーツやアクション映像に有効です。

- Animationはアニメやカートゥーンのようなセルアニメーションに有用です。

- TapeはFilmでは望む結果が得られない、VHSソースのような細部に乏しいアナログテープに有用です。

- Spriteは 1-/4-/8-/16-bitの2次元ゲームに有効です。Spriteは高精細度映像向けには作られていません。</value>
  </data>
  <data name="FilterView_Deinterlace" xml:space="preserve">
    <value>インターレース解除は画像からくし状のノイズを除去します。

Yadifは人気で速い解除フィルターです。

Decombは品質と速度に応じて複数の補完法を切り替えることができます。</value>
  </data>
  <data name="FilterView_DeinterlaceCustom" xml:space="preserve">
    <value>インターレース解除のカスタムパラメーターです。
 
 Yadif syntax: mode=m:parity=p
 
 Yadif default: mode=3
 
 Decomb syntax: mode=m:magnitude-thresh=m:variance-thresh=v:laplacian-thresh=l:dilation-thresh=d:erosion-thresh=e:noise-thresh=n:search-distance=s:postproc=p:parity=p
 
 Decomb default: mode=7</value>
  </data>
  <data name="FilterView_DeinterlacePreset" xml:space="preserve">
    <value>インターレース除去フィルターのプリセットです。

既定では速度と品質のバランスを取ります。

Skip Spatial Checkは処理速度を少し早めるため、Yadifに避けられるノイズ修正をスキップさせます。

EEDI2はより遅く、高品質なDecombの補完法です。高度な処理を必要とするソースにはうってつけです。

Bobは解像度を多少犠牲にして、動きを残すのに向いています。</value>
  </data>
  <data name="FilterView_Flip" xml:space="preserve">
    <value>画像を水平に反転します。</value>
  </data>
  <data name="FilterView_InterlaceDetection" xml:space="preserve">
    <value>インターレース検出が有効にされた場合、インターレース解除フィルターはビデオフレームがインターレースであるときのみ実行されます。</value>
  </data>
  <data name="FilterView_InterlaceDetectionCustom" xml:space="preserve">
    <value>インターレース検出のカスタムパラメーターです。
 
 Syntax: mode=m:spatial-metric=s:motion-thresh=m:spatial-thresh=s:filter-mode=f:block-thresh=b:block-width=b:block-height=b:disable=d
 
 既定: mode=3:spatial-metric=2:motion-thresh=1:spatial-thresh=1:filter-mode=2:block-thresh=40:block-width=16:block-height=16</value>
  </data>
  <data name="FilterView_Rotate" xml:space="preserve">
    <value>画像を時計回りに90度ずつ回転させます。</value>
  </data>
  <data name="MainView_Duration" xml:space="preserve">
    <value>時間:分:秒で表されるソース範囲の長さです</value>
  </data>
  <data name="PictureSettingsView_KeepAR" xml:space="preserve">
    <value>アスペクト比を維持はソースと同じ縦横比を維持します。無効にすると画像が引き延ばされるか縮んで出力されるでしょう。</value>
  </data>
  <data name="FilterView_CustomSharpenParams" xml:space="preserve">
    <value>カスタムシャープ化のパラメーターです。

Unsharp syntax: y-strength=y:y-size=y:cb-strength=c:cb-size=c:cr-strength=c:cr-size=c

Unsharp default: y-strength=0.25:y-size=7:cb-strength=0.25:cb-size=7

Lapsharp syntax: y-strength=y:y-kernel=y:cb-strength=c:cb-kernel=c:cr-strength=c:cr-kernel=c

Lapsharp default: y-strength=0.2:y-kernel=isolap:cb-strength=0.2:cb-kernel=isolap</value>
  </data>
  <data name="FilterView_Sharpen" xml:space="preserve">
    <value>シャープ化は細部、特に輪郭の見た目を良くします。角に強すぎるシャープ化の設定はリンギングアーティファクトとノイズの増強によって品質を落とし、圧縮効率の低下に影響するでしょう。

アンシャープは通常使われるアンシャープマスクフィルターです。画像をぼかし、ぼかした画像と元の違いを比較計算しシャープにします。

Lapsharpはラプラシアンフィルタを畳み込み処理しシャープ化します。時々アンシャープマスクよりも高い品質で出力されます。</value>
  </data>
  <data name="FilterView_SharpenPreset" xml:space="preserve">
    <value>シャープ化フィルターのプリセットです。フィルターの強さを設定します。</value>
  </data>
  <data name="FilterView_SharpenTune" xml:space="preserve">
    <value>シャープ化のチューニングです。特別な場合向けに設定を最適化するための調整ができます。

なしは既定のプリセット設定を使用します。

アンシャープはUltrafine、 Fine、 Medium、 Coarse、 Very Coarseが使用できます。出力される画像の解像度と細部が向上するものを選んでください。

LapsharpのFilmは実写コンテンツで使用される設定にします。Filmは等方性ラプラシアンで輪郭をシャープにし、色情報よりも照度情報がよりシャープになります。

LapsharpのGrainはFilmと似ていますが、ざらつきとノイズへの影響を低減するためGaussカーネルの等方性ラプラシアンを使用します。Filmの代わりにざらつきを残したい場合に有用です。

LapsharpのAnimationはアニメやカートゥーンのようなセルアニメーションに有用です。AnimationはFilmと同じですが、ノイズの生成を抑えるため全体的な強さを控えています。

LapsharpのSpriteは1-/4-/8-/16-bitの2次元ゲームに向いています。Spriteは斜め方向より垂直水平方向を向上させる、4近接ラプラシアンカーネルを使用します。</value>
  </data>
  <data name="MainView_AlignAVStart" xml:space="preserve">
    <value>空のフレームやドロップフレームを挿入することによりすべての音声/映像のタイムスタンプを調整します。MP4編集リストを使用しないプレイヤーでの音声/映像を同期させます。</value>
  </data>
  <data name="MainView_PresetOptionsContextMenu" xml:space="preserve">
    <value>プリセットコントロールオプション。</value>
  </data>
  <data name="MainView_EndPoint" xml:space="preserve">
    <value>範囲の終わりの地点です。</value>
  </data>
  <data name="MainView_StartPoint" xml:space="preserve">
    <value>範囲の始まりの地点です。</value>
  </data>
  <data name="OptionsView_AlwaysUseDefaultPath" xml:space="preserve">
    <value>自動命名を有効にするとシステムは常に既定のパスを使用します。
無効にすると、メインウインドウの保存先欄のパスが埋められていればそれを使用し、でなければ既定のパスを使用します。</value>
  </data>
</root>
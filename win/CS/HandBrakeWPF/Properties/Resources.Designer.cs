//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HandBrakeWPF.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HandBrakeWPF.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (C) 2003-2018 The HandBrake Team
        ///
        ///This program is free software; you can redistribute it and/or
        ///modify it under the terms of the GNU General Public License
        ///as published by the Free Software Foundation; either version 2
        ///of the License, or (at your option) any later version.
        ///
        ///This program is distributed in the hope that it will be useful,
        ///but WITHOUT ANY WARRANTY; without even the implied warranty of
        ///MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        ///GNU General Public License f [rest of string was truncated]&quot;;.
        /// </summary>
        public static string About_GPL {
            get {
                return ResourceManager.GetString("About_GPL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can optionally store a picture settings with this preset. There are 3 modes:
        ///
        ///None:  Picture settings are not stored in the preset. When loading a source, they will remain as-is within the bounds of the source resolution. This also affects Anamorphic, modulus, cropping etc.
        ///
        ///Custom: You can optionally set a Maximum width and Height. When doing this an encode will be less than or equal to these values. Keep Aspect Ratio will be automatically turned on.
        ///
        ///Source Maximum:  Always encode at the sources [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AddPreset_PictureSizeMode {
            get {
                return ResourceManager.GetString("AddPreset_PictureSizeMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Custom Width or Height fields must be filled in for the &apos;Custom&apos; option..
        /// </summary>
        public static string AddPresetViewModel_CustomWidthHeightFieldsRequired {
            get {
                return ResourceManager.GetString("AddPresetViewModel_CustomWidthHeightFieldsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Preset must have a Name. Please fill out the Preset Name field..
        /// </summary>
        public static string AddPresetViewModel_PresetMustProvideName {
            get {
                return ResourceManager.GetString("AddPresetViewModel_PresetMustProvideName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Preset with this name already exists. Would you like to overwrite it?.
        /// </summary>
        public static string AddPresetViewModel_PresetWithSameNameOverwriteWarning {
            get {
                return ResourceManager.GetString("AddPresetViewModel_PresetWithSameNameOverwriteWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to add preset.
        /// </summary>
        public static string AddPresetViewModel_UnableToAddPreset {
            get {
                return ResourceManager.GetString("AddPresetViewModel_UnableToAddPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first scan a source to use the &apos;Source Maximum&apos; Option..
        /// </summary>
        public static string AddPresetViewModel_YouMustFirstScanSource {
            get {
                return ResourceManager.GetString("AddPresetViewModel_YouMustFirstScanSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x264 has a variety of algorithms to decide when to use B-frames and how many to use.
        ///
        ///Fast mode takes roughly the same amount of time no matter how many B-frames you specify.  However, while fast, its decisions are often suboptimal.
        ///
        ///Optimal mode gets slower as the maximum number of B-Frames increases, but makes much more accurate decisions, especially when used with B-pyramid..
        /// </summary>
        public static string Advanced_AdaptiveBFramesToolTip {
            get {
                return ResourceManager.GetString("Advanced_AdaptiveBFramesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H.264 allows for two different prediction modes, spatial and temporal, in B-frames.
        ///
        ///Spatial, the default, is almost always better, but temporal is sometimes useful too.
        ///
        ///x264 can, at the cost of a small amount of speed (and accordingly for a small compression gain), adaptively select which is better for each particular frame..
        /// </summary>
        public static string Advanced_AdaptiveDirectModeToolTip {
            get {
                return ResourceManager.GetString("Advanced_AdaptiveDirectModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adaptive quantization controls how the encoder distributes bits across the frame.
        ///Higher values take more bits away from edges and complex areas to improve areas with finer detail..
        /// </summary>
        public static string Advanced_AdaptiveQuantizationStrengthToolTip {
            get {
                return ResourceManager.GetString("Advanced_AdaptiveQuantizationStrengthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mode decision picks from a variety of options to make its decision: this option chooses what options those are.  
        ///Fewer partitions to check means faster encoding, at the cost of worse decisions, since the best option might have been one that was turned off..
        /// </summary>
        public static string Advanced_AnalysisToolTip {
            get {
                return ResourceManager.GetString("Advanced_AnalysisToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sane values are ~2-5.  
        ///This specifies the maximum number of sequential B-frames that the encoder can use. 
        /// Large numbers generally won&apos;t help significantly unless Adaptive B-frames is set to Optimal.  
        ///Cel-animated source material and B-pyramid also significantly increase the usefulness of larger values. 
        ///Baseline profile, as required for iPods and similar devices, requires B-frames to be set to 0 (off)..
        /// </summary>
        public static string Advanced_BFramesToolTip {
            get {
                return ResourceManager.GetString("Advanced_BFramesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After the encoder has done its work, it has a bunch of data that needs to be compressed losslessly, similar to ZIP or RAR. H.264 provides two options for this: CAVLC and CABAC.  CABAC decodes a lot slower but compresses significantly better (10-30%), especially at lower bitrates. If you&apos;re looking to minimize CPU requirements for video playback, disable this option. Baseline profile, as required for iPods and similar devices, requires CABAC to be disabled..
        /// </summary>
        public static string Advanced_CabacToolTip {
            get {
                return ResourceManager.GetString("Advanced_CabacToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to H.264 has a built-in deblocking filter that smooths out blocking artifacts after decoding each frame.  This not only improves visual quality, but also helps compression significantly. 
        ///The deblocking filter takes a lot of CPU power, so if you&apos;re looking to minimize CPU requirements for video playback, disable it.
        ///
        ///The deblocking filter has two adjustable parameters, &quot;strength&quot; and &quot;threshold&quot;. 
        ///The former controls how strong (or weak) the deblocker is, while the latter controls how many (or few)  edges  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Advanced_DeblockingToolTip {
            get {
                return ResourceManager.GetString("Advanced_DeblockingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The 8x8 transform is the single most useful feature of x264 in terms of compression-per-speed.  
        ///It improves compression by at least 5% at a very small speed cost and may provide an unusually high visual quality benefit compared to its compression gain.  
        ///However, it requires High Profile, which many devices may not support..
        /// </summary>
        public static string Advanced_EightByEightDctToolTip {
            get {
                return ResourceManager.GetString("Advanced_EightByEightDctToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The options passed to the x264 encoder. 
        ///The above controls are only a subset of useful x264 parameters. 
        ///This box allows you to add or modify additional or current parameters as desired. .
        /// </summary>
        public static string Advanced_EncoderOptions {
            get {
                return ResourceManager.GetString("Advanced_EncoderOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controls the motion estimation method. Motion estimation is how the encoder estimates how each block of pixels in a frame has moved.  
        ///A better motion search method improves compression at the cost of speed.
        ///
        ///Diamond: performs an extremely fast and simple search using a diamond pattern.
        ///
        ///Hexagon: performs a somewhat more effective but slightly slower search using a hexagon pattern.
        ///
        ///Uneven Multi-Hex: performs a very wide search using a variety of patterns, more accurately capturing complex motion.
        ///        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Advanced_MotionEstimationMethodToolTip {
            get {
                return ResourceManager.GetString("Advanced_MotionEstimationMethodToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the distance x264 searches from its best guess at the motion of a block in order to try to find its actual motion.  
        ///
        ///The default is fine for most content, but extremely high motion video, especially at HD resolutions, may benefit from higher ranges, albeit at a high speed cost..
        /// </summary>
        public static string Advanced_MotionEstimationRangeToolTip {
            get {
                return ResourceManager.GetString("Advanced_MotionEstimationRangeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to x264 normally zeroes out nearly-empty data blocks to save bits to be better used for some other purpose in the video.  
        ///However, this can sometimes have slight negative effects on retention of subtle grain and dither.  
        ///Don&apos;t touch this unless you&apos;re having banding issues or other such cases where you are having trouble keeping fine noise..
        /// </summary>
        public static string Advanced_NoDctDecimateToolTip {
            get {
                return ResourceManager.GetString("Advanced_NoDctDecimateToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no options pane available for this encoder.
        ///
        ///Please use the &apos;Extra Options&apos; box on the &apos;Video&apos; tab to input any additional encoder parameters you may need..
        /// </summary>
        public static string Advanced_NoOptionsPaneAvailable {
            get {
                return ResourceManager.GetString("Advanced_NoOptionsPaneAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The x264 Preset / Tune / Profile and Level options are currently in use on the Video Tab. 
        ///
        ///To enable this tab, check the &quot;Use Advanced Tab instead&quot; option on the Video Tab.
        ///
        ///If you do not use this tab, it can be hidden from: Tools Menu &gt; Options &gt; Advanced..
        /// </summary>
        public static string Advanced_NotInUse {
            get {
                return ResourceManager.GetString("Advanced_NotInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Psychovisual Rate Distortion means x264 tries to retain detail, for better quality to the human eye, 
        ///as opposed to trying to maximize quality the way a computer understands it, through signal-to-noise ratios that have trouble telling apart fine detail and noise..
        /// </summary>
        public static string Advanced_PsychovisualRateDistortionToolTip {
            get {
                return ResourceManager.GetString("Advanced_PsychovisualRateDistortionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Psychovisual Trellis tries to retain more sharpness and detail, but can cause artifacting.
        ///It is considered experimental, which is why it&apos;s off by default. Good values are 0.1 to 0.2..
        /// </summary>
        public static string Advanced_PsychovisualTrellisToolTip {
            get {
                return ResourceManager.GetString("Advanced_PsychovisualTrellisToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to B-pyramid improves compression by creating a pyramidal structure (hence the name) of B-frames, allowing B-frames to 
        ///reference each other to improve compression.  
        ///
        ///Requires Max B-frames greater than 1; optimal adaptive B-frames is strongly recommended for full compression benefit..
        /// </summary>
        public static string Advanced_PyramidalBFramesToolTip {
            get {
                return ResourceManager.GetString("Advanced_PyramidalBFramesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sane values are ~1-6.
        ///
        ///The more you add, the better the compression, but the slower the encode.
        ///
        ///Cel animation tends to benefit from more reference frames a lot more than film content.
        ///
        ///Note that many hardware devices have limitations on the number of supported reference frames, so if you&apos;re encoding for a handheld or standalone player, don&apos;t touch this unless you&apos;re absolutely sure you know what you&apos;re doing!.
        /// </summary>
        public static string Advanced_ReferenceFramesToolTip {
            get {
                return ResourceManager.GetString("Advanced_ReferenceFramesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting controls both subpixel-precision motion estimation and mode decision methods.
        ///
        ///Subpixel motion estimation is used for refining motion estimates beyond mere pixel accuracy, improving compression.
        ///
        ///Mode decision is the method used to choose how to encode each block of the frame: a very important decision.
        ///
        ///SAD is the fastest method, followed by SATD, RD, RD refinement, and the slowest, QPRD.
        ///6 or higher is strongly recommended: Psy-RD, a very powerful psy optimization that helps retain det [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Advanced_SubpixelMotionEstimationToolTip {
            get {
                return ResourceManager.GetString("Advanced_SubpixelMotionEstimationToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trellis fine-tunes the rounding of transform coefficients to squeeze out 3-5% more compression at the cost of some speed. 
        ///&quot;Always&quot; uses trellis not only during the main encoding process, but also during analysis, which improves compression even more, albeit at great speed cost. 
        ///
        ///Trellis costs more speed at higher bitrates..
        /// </summary>
        public static string Advanced_TrellisToolTip {
            get {
                return ResourceManager.GetString("Advanced_TrellisToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performs extra analysis to decide upon weighting parameters for each frame.  
        ///This improves overall compression slightly and improves the quality of fades greatly. 
        ///Baseline profile, as required for iPods and similar devices, requires weighted P-frame prediction to be disabled.  
        ///Note that some devices and players, even those that support Main Profile, 
        ///may have problems with Weighted P-frame prediction: the Apple TV is completely incompatible with it, for example..
        /// </summary>
        public static string Advanced_WeightPToolTip {
            get {
                return ResourceManager.GetString("Advanced_WeightPToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure?.
        /// </summary>
        public static string AreYouSure {
            get {
                return ResourceManager.GetString("AreYouSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio Defaults.
        /// </summary>
        public static string AudioViewModel_AudioDefaults {
            get {
                return ResourceManager.GetString("AudioViewModel_AudioDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio Tracks.
        /// </summary>
        public static string AudioViewModel_AudioTracks {
            get {
                return ResourceManager.GetString("AudioViewModel_AudioTracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection Behavior.
        /// </summary>
        public static string AudioViewModel_ConfigureDefaults {
            get {
                return ResourceManager.GetString("AudioViewModel_ConfigureDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch Back To Tracks.
        /// </summary>
        public static string AudioViewModel_SwitchBackToTracks {
            get {
                return ResourceManager.GetString("AudioViewModel_SwitchBackToTracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chapter marker names will NOT be saved in your encode..
        /// </summary>
        public static string ChaptersViewModel_UnableToExportChaptersMsg {
            get {
                return ResourceManager.GetString("ChaptersViewModel_UnableToExportChaptersMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to save Chapter Markers file! .
        /// </summary>
        public static string ChaptersViewModel_UnableToExportChaptersWarning {
            get {
                return ResourceManager.GetString("ChaptersViewModel_UnableToExportChaptersWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First column in chapters file must only contain a integer number value higher than zero (0).
        /// </summary>
        public static string ChaptersViewModel_UnableToImportChaptersFirstColumnMustContainOnlyIntegerNumber {
            get {
                return ResourceManager.GetString("ChaptersViewModel_UnableToImportChaptersFirstColumnMustContainOnlyIntegerNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All lines in chapters file must have at least 2 columns of data.
        /// </summary>
        public static string ChaptersViewModel_UnableToImportChaptersLineDoesNotHaveAtLeastTwoColumns {
            get {
                return ResourceManager.GetString("ChaptersViewModel_UnableToImportChaptersLineDoesNotHaveAtLeastTwoColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0} is invalid. Nothing will be imported..
        /// </summary>
        public static string ChaptersViewModel_UnableToImportChaptersMalformedLineMsg {
            get {
                return ResourceManager.GetString("ChaptersViewModel_UnableToImportChaptersMalformedLineMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to import chapter file.
        /// </summary>
        public static string ChaptersViewModel_UnableToImportChaptersWarning {
            get {
                return ResourceManager.GetString("ChaptersViewModel_UnableToImportChaptersWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chapter files of type &apos;{0}&apos; are not currently supported..
        /// </summary>
        public static string ChaptersViewModel_UnsupportedFileFormatMsg {
            get {
                return ResourceManager.GetString("ChaptersViewModel_UnsupportedFileFormatMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported chapter file type.
        /// </summary>
        public static string ChaptersViewModel_UnsupportedFileFormatWarning {
            get {
                return ResourceManager.GetString("ChaptersViewModel_UnsupportedFileFormatWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of chapters on the source media 
        ///and the number of chapters in the input file do not match ({0} vs {1}).
        ///
        ///Do you still want to import the chapter names?.
        /// </summary>
        public static string ChaptersViewModel_ValidateImportedChapters_ChapterCountMismatch {
            get {
                return ResourceManager.GetString("ChaptersViewModel_ValidateImportedChapters_ChapterCountMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of chapters on the source media 
        ///and the number of chapters in the input file do not match ({0} vs {1}).
        ///
        ///Do you still want to import the chapter names?.
        /// </summary>
        public static string ChaptersViewModel_ValidateImportedChapters_ChapterCountMismatchMsg {
            get {
                return ResourceManager.GetString("ChaptersViewModel_ValidateImportedChapters_ChapterCountMismatchMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chapter count doesn&apos;t match between source and input file.
        /// </summary>
        public static string ChaptersViewModel_ValidateImportedChapters_ChapterCountMismatchWarning {
            get {
                return ResourceManager.GetString("ChaptersViewModel_ValidateImportedChapters_ChapterCountMismatchWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The reported duration of the chapters on the source media 
        ///and the duration of chapters in the input file differ greatly.
        ///
        ///It is very likely that this chapter file was produced from a different source media.
        ///
        ///Are you sure you want to import the chapter names?.
        /// </summary>
        public static string ChaptersViewModel_ValidateImportedChapters_ChapterDurationMismatchMsg {
            get {
                return ResourceManager.GetString("ChaptersViewModel_ValidateImportedChapters_ChapterDurationMismatchMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chapter duration doesn&apos;t match between source and input file.
        /// </summary>
        public static string ChaptersViewModel_ValidateImportedChapters_ChapterDurationMismatchWarning {
            get {
                return ResourceManager.GetString("ChaptersViewModel_ValidateImportedChapters_ChapterDurationMismatchWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid chapter information for source media.
        /// </summary>
        public static string ChaptersViewModel_ValidationFailedWarning {
            get {
                return ResourceManager.GetString("ChaptersViewModel_ValidationFailedWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string Confirm {
            get {
                return ResourceManager.GetString("Confirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following action &apos;{0}&apos; will occur in {1} seconds..
        /// </summary>
        public static string CountdownAlertViewModel_NoticeMessage {
            get {
                return ResourceManager.GetString("CountdownAlertViewModel_NoticeMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Folder?.
        /// </summary>
        public static string DirectoryUtils_CreateFolder {
            get {
                return ResourceManager.GetString("DirectoryUtils_CreateFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you are trying to write to does not exist. Would you like HandBrake to create the following folder?
        ///{0}.
        /// </summary>
        public static string DirectoryUtils_CreateFolderMsg {
            get {
                return ResourceManager.GetString("DirectoryUtils_CreateFolderMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the problem presists, please try restarting HandBrake..
        /// </summary>
        public static string ErrorViewModel_IfTheProblemPersists {
            get {
                return ResourceManager.GetString("ErrorViewModel_IfTheProblemPersists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no further information available about this error..
        /// </summary>
        public static string ErrorViewModel_NoFurtherInformation {
            get {
                return ResourceManager.GetString("ErrorViewModel_NoFurtherInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Unknown Error has occurred..
        /// </summary>
        public static string ErrorViewModel_UnknownError {
            get {
                return ResourceManager.GetString("ErrorViewModel_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandBrake.
        /// </summary>
        public static string HandBrake_Title {
            get {
                return ResourceManager.GetString("HandBrake_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandBrake is already encoding..
        /// </summary>
        public static string Main_AlreadyEncoding {
            get {
                return ResourceManager.GetString("Main_AlreadyEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: If you wish to have subtitles added to each item you are about to queue, please verify that you have the subtitle defaults setup correctly on the subtitles tab.
        ///    
        ///    Do you wish to continue?.
        /// </summary>
        public static string Main_AutoAdd_AudioAndSubWarning {
            get {
                return ResourceManager.GetString("Main_AutoAdd_AudioAndSubWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please choose a destination for where you would like the encoded file to be saved..
        /// </summary>
        public static string Main_ChooseDestination {
            get {
                return ResourceManager.GetString("Main_ChooseDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current file already exists, do you wish to overwrite it?.
        /// </summary>
        public static string Main_DestinationOverwrite {
            get {
                return ResourceManager.GetString("Main_DestinationOverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are jobs on the queue with the same destination path. Please choose a different path for this job..
        /// </summary>
        public static string Main_DuplicateDestinationOnQueue {
            get {
                return ResourceManager.GetString("Main_DuplicateDestinationOnQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entered destination path contained illegal characters and will not be updated..
        /// </summary>
        public static string Main_InvalidDestination {
            get {
                return ResourceManager.GetString("Main_InvalidDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to    Pending Jobs {0}.
        /// </summary>
        public static string Main_JobsPending_addon {
            get {
                return ResourceManager.GetString("Main_JobsPending_addon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your destination directory is low on diskspace. Please free up some disk space on your destination drive. Alternatively you can change the level at which this alert triggers in Options. .
        /// </summary>
        public static string Main_LowDiskspace {
            get {
                return ResourceManager.GetString("Main_LowDiskspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot encode to a file with the same path and filename as the source file. Please update the destination filename so that it does not match the source file..
        /// </summary>
        public static string Main_MatchingFileOverwriteWarning {
            get {
                return ResourceManager.GetString("Main_MatchingFileOverwriteWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Default Preset Set: {0}.
        /// </summary>
        public static string Main_NewDefaultPreset {
            get {
                return ResourceManager.GetString("Main_NewDefaultPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A New Update is Available. Goto Tools Menu &gt; Options to Install.
        /// </summary>
        public static string Main_NewUpdate {
            get {
                return ResourceManager.GetString("Main_NewUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output directory you have chosen either does not exist, or you do not have permissions to write files to it..
        /// </summary>
        public static string Main_NoPermissionsOrMissingDirectory {
            get {
                return ResourceManager.GetString("Main_NoPermissionsOrMissingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Preset selected..
        /// </summary>
        public static string Main_NoPresetSelected {
            get {
                return ResourceManager.GetString("Main_NoPresetSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can not modify built in presets. Please select one of your own presets..
        /// </summary>
        public static string Main_NoUpdateOfBuiltInPresets {
            get {
                return ResourceManager.GetString("Main_NoUpdateOfBuiltInPresets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a folder..
        /// </summary>
        public static string Main_PleaseSelectFolder {
            get {
                return ResourceManager.GetString("Main_PleaseSelectFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preparing to encode ....
        /// </summary>
        public static string Main_PreparingToEncode {
            get {
                return ResourceManager.GetString("Main_PreparingToEncode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can not import a preset with the same name as a built-in preset..
        /// </summary>
        public static string Main_PresetErrorBuiltInName {
            get {
                return ResourceManager.GetString("Main_PresetErrorBuiltInName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to import the selected preset..
        /// </summary>
        public static string Main_PresetImportFailed {
            get {
                return ResourceManager.GetString("Main_PresetImportFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The preset may be corrupted or from an older version of HandBrake which is not supported. 
        ///Presets from older versions must be re-created in the current version..
        /// </summary>
        public static string Main_PresetImportFailedSolution {
            get {
                return ResourceManager.GetString("Main_PresetImportFailedSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The preset &quot;{0}&quot; already exists. Would you like to overwrite it?.
        /// </summary>
        public static string Main_PresetOverwriteWarning {
            get {
                return ResourceManager.GetString("Main_PresetOverwriteWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Presets.
        /// </summary>
        public static string Main_Presets {
            get {
                return ResourceManager.GetString("Main_Presets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you wish to update the selected preset?.
        /// </summary>
        public static string Main_PresetUpdateConfrimation {
            get {
                return ResourceManager.GetString("Main_PresetUpdateConfrimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Preset has now been updated with your current settings..
        /// </summary>
        public static string Main_PresetUpdated {
            get {
                return ResourceManager.GetString("Main_PresetUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandBrake has determined your built-in presets are out of date... These presets will now be updated.
        ///Your custom presets have not been updated so you may have to re-create these by deleting and re-adding them. 
        ///The previous user_presets.xml file was backed up..
        /// </summary>
        public static string Main_PresetUpdateNotification {
            get {
                return ResourceManager.GetString("Main_PresetUpdateNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Finished.
        /// </summary>
        public static string Main_QueueFinished {
            get {
                return ResourceManager.GetString("Main_QueueFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  with {0} errors or cancellations detected..
        /// </summary>
        public static string Main_QueueFinishedErrors {
            get {
                return ResourceManager.GetString("Main_QueueFinishedErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue{0}.
        /// </summary>
        public static string Main_QueueLabel {
            get {
                return ResourceManager.GetString("Main_QueueLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Paused.
        /// </summary>
        public static string Main_QueuePaused {
            get {
                return ResourceManager.GetString("Main_QueuePaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Cancelled..
        /// </summary>
        public static string Main_ScanCancelled {
            get {
                return ResourceManager.GetString("Main_ScanCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Completed.
        /// </summary>
        public static string Main_ScanCompleted {
            get {
                return ResourceManager.GetString("Main_ScanCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan failed: .
        /// </summary>
        public static string Main_ScanFailed_NoReason {
            get {
                return ResourceManager.GetString("Main_ScanFailed_NoReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan Failed... Please See Activity Log for details..
        /// </summary>
        public static string Main_ScanFailled_CheckLog {
            get {
                return ResourceManager.GetString("Main_ScanFailled_CheckLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning source, please wait....
        /// </summary>
        public static string Main_ScanningPleaseWait {
            get {
                return ResourceManager.GetString("Main_ScanningPleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scanning Title {0} of {1} ({2}%).
        /// </summary>
        public static string Main_ScanningTitleXOfY {
            get {
                return ResourceManager.GetString("Main_ScanningTitleXOfY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid source or titles found..
        /// </summary>
        public static string Main_ScanNoTitlesFound {
            get {
                return ResourceManager.GetString("Main_ScanNoTitlesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandBrake will not be able to encode the seleteced source as it did not find a valid source with titles to encode. 
        ///This could be due to one of the following reasons:
        ///- The source file is not a valid video file or is in a format that HandBrake does not support.
        ///- The source may be copy protected or include DRM. Please note that HandBrake does not support the removal of copy protections.
        ///
        ///The Activity log may have further information..
        /// </summary>
        public static string Main_ScanNoTitlesFoundMessage {
            get {
                return ResourceManager.GetString("Main_ScanNoTitlesFoundMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first scan a source and setup your job before starting an encode. Click the &apos;Source&apos; button on the toolbar to continue..
        /// </summary>
        public static string Main_ScanSource {
            get {
                return ResourceManager.GetString("Main_ScanSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select make sure you have selected one of your own presets. Please note that you cannot export built-in presets..
        /// </summary>
        public static string Main_SelectPreset {
            get {
                return ResourceManager.GetString("Main_SelectPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please select a preset to update..
        /// </summary>
        public static string Main_SelectPresetForUpdate {
            get {
                return ResourceManager.GetString("Main_SelectPresetForUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select &apos;Source&apos; to continue.
        /// </summary>
        public static string Main_SelectSource {
            get {
                return ResourceManager.GetString("Main_SelectSource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first set the destination path for the output file before adding to the queue..
        /// </summary>
        public static string Main_SetDestination {
            get {
                return ResourceManager.GetString("Main_SetDestination", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot overwrite the source file you want to convert.
        ///Please choose a different filename..
        /// </summary>
        public static string Main_SourceDestinationMatchError {
            get {
                return ResourceManager.GetString("Main_SourceDestinationMatchError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Encode.
        /// </summary>
        public static string Main_Start {
            get {
                return ResourceManager.GetString("Main_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Queue.
        /// </summary>
        public static string Main_StartQueue {
            get {
                return ResourceManager.GetString("Main_StartQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must turn on automatic file naming AND set a default path in preferences before you can add to the queue..
        /// </summary>
        public static string Main_TurnOnAutoFileNaming {
            get {
                return ResourceManager.GetString("Main_TurnOnAutoFileNaming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your system prevented HandBrake from launching a web browser..
        /// </summary>
        public static string Main_UnableToLoadHelpMessage {
            get {
                return ResourceManager.GetString("Main_UnableToLoadHelpMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can still access the help pages by visiting the website directly at: https://handbrake.fr.
        /// </summary>
        public static string Main_UnableToLoadHelpSolution {
            get {
                return ResourceManager.GetString("Main_UnableToLoadHelpSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Encodes Pending.
        /// </summary>
        public static string Main_XEncodesPending {
            get {
                return ResourceManager.GetString("Main_XEncodesPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can not delete the default preset. Please set another preset as default first..
        /// </summary>
        public static string MainViewModel_CanNotDeleteDefaultPreset {
            get {
                return ResourceManager.GetString("MainViewModel_CanNotDeleteDefaultPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding: Pass {0} of {1},  {2:00.00}%, FPS: {3:000.0},  Avg FPS: {4:000.0},  Time Remaining: {5},  Elapsed: {6:d\:hh\:mm\:ss} {7}.
        /// </summary>
        public static string MainViewModel_EncodeStatusChanged_StatusLabel {
            get {
                return ResourceManager.GetString("MainViewModel_EncodeStatusChanged_StatusLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing Pass {0} of {1}, (Subtitle Scan)  {2:00.00}%, Scan Time Remaining: {3},  Elapsed: {4:d\:hh\:mm\:ss}.
        /// </summary>
        public static string MainViewModel_EncodeStatusChanged_SubScan_StatusLabel {
            get {
                return ResourceManager.GetString("MainViewModel_EncodeStatusChanged_SubScan_StatusLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low Disk Space.
        /// </summary>
        public static string MainViewModel_LowDiskSpace {
            get {
                return ResourceManager.GetString("MainViewModel_LowDiskSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning, you are running low on disk space. HandBrake will not be able to complete this encode if you run out of space. .
        /// </summary>
        public static string MainViewModel_LowDiskSpaceWarning {
            get {
                return ResourceManager.GetString("MainViewModel_LowDiskSpaceWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the preset: .
        /// </summary>
        public static string MainViewModel_PresetRemove_AreYouSure {
            get {
                return ResourceManager.GetString("MainViewModel_PresetRemove_AreYouSure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to launch destination directory..
        /// </summary>
        public static string MainViewModel_UnableToLaunchDestDir {
            get {
                return ResourceManager.GetString("MainViewModel_UnableToLaunchDestDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please check that you have a valid destination directory..
        /// </summary>
        public static string MainViewModel_UnableToLaunchDestDirSolution {
            get {
                return ResourceManager.GetString("MainViewModel_UnableToLaunchDestDirSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding: Pass {0} of {1},  {2:00.00}%
        ///FPS: {3:000.0},  Avg FPS: {4:000.0}
        ///Time Remaining: {5},  Elapsed: {6:d\:hh\:mm\:ss}.
        /// </summary>
        public static string MiniViewModel_EncodeStatusChanged_StatusLabel {
            get {
                return ResourceManager.GetString("MiniViewModel_EncodeStatusChanged_StatusLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Additional Information.
        /// </summary>
        public static string NoAdditionalInformation {
            get {
                return ResourceManager.GetString("NoAdditionalInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notice.
        /// </summary>
        public static string Notice {
            get {
                return ResourceManager.GetString("Notice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format of the output file. In addition to any supported file system character, you can use the following placeholders that will be replaced when you change title or scan a source.
        ///
        ///Live Update Options: {source} {title} {chapters} 
        ///Non-Live Options: {date} {time} {quality} {bitrate} (These only change if you scan a new source, change title or chapters).
        /// </summary>
        public static string Options_AdditionalFormatOptions {
            get {
                return ResourceManager.GetString("Options_AdditionalFormatOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available additional Options: {source_path} or {source_folder_name} 
        ///
        ///Not both at the same time!.
        /// </summary>
        public static string Options_DefaultPathAdditionalParams {
            get {
                return ResourceManager.GetString("Options_DefaultPathAdditionalParams", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your system supports the 64bit version of HandBrake! This offers performance and stability improvements over this 32bit version.
        ///    Please check the website for release notes..
        /// </summary>
        public static string OptionsViewModel_64bitAvailable {
            get {
                return ResourceManager.GetString("OptionsViewModel_64bitAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A New Update is Available! Please check the website for release notes..
        /// </summary>
        public static string OptionsViewModel_NewUpdate {
            get {
                return ResourceManager.GetString("OptionsViewModel_NewUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no new updates at this time..
        /// </summary>
        public static string OptionsViewModel_NoNewUpdates {
            get {
                return ResourceManager.GetString("OptionsViewModel_NoNewUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Downloaded.
        /// </summary>
        public static string OptionsViewModel_UpdateDownloaded {
            get {
                return ResourceManager.GetString("OptionsViewModel_UpdateDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Failed. You can try downloading the update from https://handbrake.fr.
        /// </summary>
        public static string OptionsViewModel_UpdateFailed {
            get {
                return ResourceManager.GetString("OptionsViewModel_UpdateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Service Unavailable. You can try downloading the update from https://handbrake.fr.
        /// </summary>
        public static string OptionsViewModel_UpdateServiceUnavailable {
            get {
                return ResourceManager.GetString("OptionsViewModel_UpdateServiceUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite?.
        /// </summary>
        public static string Overwrite {
            get {
                return ResourceManager.GetString("Overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Paused.  Warning, the drive you are encoding to is low on disk space. Please free up some space and press start to continue. You can also adjust the minimum space level in preferences..
        /// </summary>
        public static string PauseOnLowDiskspace {
            get {
                return ResourceManager.GetString("PauseOnLowDiskspace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output: {0}.
        /// </summary>
        public static string PictureSettings_OutputResolution {
            get {
                return ResourceManager.GetString("PictureSettings_OutputResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Size: {0}x{1},  PAR {2}x{3}.
        /// </summary>
        public static string PictureSettingsViewModel_StorageDisplayLabel {
            get {
                return ResourceManager.GetString("PictureSettingsViewModel_StorageDisplayLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preset Version.
        /// </summary>
        public static string Preset_OldVersion_Header {
            get {
                return ResourceManager.GetString("Preset_OldVersion_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The preset you are trying to import is from a different version of HandBrake. 
        /// It may not be possible to import all the values from this preset. 
        ///
        ///Do you wish to proceed?.
        /// </summary>
        public static string Preset_OldVersion_Message {
            get {
                return ResourceManager.GetString("Preset_OldVersion_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to import preset!.
        /// </summary>
        public static string Preset_UnableToImport_Header {
            get {
                return ResourceManager.GetString("Preset_UnableToImport_Header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to import the preset as it appears to be corrupted or from an older version of HandBrake..
        /// </summary>
        public static string Preset_UnableToImport_Message {
            get {
                return ResourceManager.GetString("Preset_UnableToImport_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandBrake is unable to upgrade your presets file to a new version format.
        ///Your preset file will be archived and new one created. You will need to re-create your own presets..
        /// </summary>
        public static string Presets_PresetForceReset {
            get {
                return ResourceManager.GetString("Presets_PresetForceReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Built-in presets have been reset..
        /// </summary>
        public static string Presets_ResetComplete {
            get {
                return ResourceManager.GetString("Presets_ResetComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Complete.
        /// </summary>
        public static string Presets_ResetHeader {
            get {
                return ResourceManager.GetString("Presets_ResetHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archived File:.
        /// </summary>
        public static string PresetService_ArchiveFile {
            get {
                return ResourceManager.GetString("PresetService_ArchiveFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandBrake has detected your presets file is from an older version.
        ///It will try and load the file anyway.
        ///If it fails, it will archive off the old file and create a new one..
        /// </summary>
        public static string PresetService_PresetsOutOfDate {
            get {
                return ResourceManager.GetString("PresetService_PresetsOutOfDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load presets..
        /// </summary>
        public static string PresetService_UnableToLoad {
            get {
                return ResourceManager.GetString("PresetService_UnableToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandBrake was unable to load your presets file. It may have been from an older unsupported version of HandBrake or corrupted. 
        ///
        ///Your old presets file was archived to:.
        /// </summary>
        public static string PresetService_UnableToLoadPresets {
            get {
                return ResourceManager.GetString("PresetService_UnableToLoadPresets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview {0}.
        /// </summary>
        public static string Preview {
            get {
                return ResourceManager.GetString("Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview (Scaled).
        /// </summary>
        public static string Preview_Scaled {
            get {
                return ResourceManager.GetString("Preview_Scaled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Question.
        /// </summary>
        public static string Question {
            get {
                return ResourceManager.GetString("Question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HandBrake is already encoding a file..
        /// </summary>
        public static string Queue_AlreadyEncoding {
            get {
                return ResourceManager.GetString("Queue_AlreadyEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please stop the current encode. If the problem persists, please restart HandBrake..
        /// </summary>
        public static string Queue_AlreadyEncodingSolution {
            get {
                return ResourceManager.GetString("Queue_AlreadyEncodingSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to reset job status as it is not in an Error or Completed state.
        /// </summary>
        public static string Queue_UnableToResetJob {
            get {
                return ResourceManager.GetString("Queue_UnableToResetJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to restore queue file..
        /// </summary>
        public static string Queue_UnableToRestoreFile {
            get {
                return ResourceManager.GetString("Queue_UnableToRestoreFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file may be corrupted or from an older incompatible version of HandBrake.
        /// </summary>
        public static string Queue_UnableToRestoreFileExtended {
            get {
                return ResourceManager.GetString("Queue_UnableToRestoreFileExtended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: You do not have automatic file naming turned on. Please enable this in options..
        /// </summary>
        public static string QueueSelection_AutoNameWarning {
            get {
                return ResourceManager.GetString("QueueSelection_AutoNameWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: You do not currently have automatic audio and subtitle track selection setup. You can setup the default track selection behaviour in options..
        /// </summary>
        public static string QueueSelection_AutoTrackSelectionWarning {
            get {
                return ResourceManager.GetString("QueueSelection_AutoTrackSelectionWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add to Queue.
        /// </summary>
        public static string QueueSelectionViewModel_AddToQueue {
            get {
                return ResourceManager.GetString("QueueSelectionViewModel_AddToQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you wish to clear the queue?.
        /// </summary>
        public static string QueueViewModel_ClearQueueConfrimation {
            get {
                return ResourceManager.GetString("QueueViewModel_ClearQueueConfrimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete the selected jobs?.
        /// </summary>
        public static string QueueViewModel_DelSelectedJobConfirmation {
            get {
                return ResourceManager.GetString("QueueViewModel_DelSelectedJobConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you wish to edit this job? It will be removed from the queue and sent to the main window..
        /// </summary>
        public static string QueueViewModel_EditConfrimation {
            get {
                return ResourceManager.GetString("QueueViewModel_EditConfrimation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This encode is currently in progress. If you delete it, the encode will be stopped. Are you sure you wish to proceed?.
        /// </summary>
        public static string QueueViewModel_JobCurrentlyRunningWarning {
            get {
                return ResourceManager.GetString("QueueViewModel_JobCurrentlyRunningWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} jobs pending.
        /// </summary>
        public static string QueueViewModel_JobsPending {
            get {
                return ResourceManager.GetString("QueueViewModel_JobsPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last Queued Job Finished.
        /// </summary>
        public static string QueueViewModel_LastJobFinished {
            get {
                return ResourceManager.GetString("QueueViewModel_LastJobFinished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No encodes pending.
        /// </summary>
        public static string QueueViewModel_NoEncodesPending {
            get {
                return ResourceManager.GetString("QueueViewModel_NoEncodesPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no jobs currently encoding.
        /// </summary>
        public static string QueueViewModel_NoJobsPending {
            get {
                return ResourceManager.GetString("QueueViewModel_NoJobsPending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no pending jobs..
        /// </summary>
        public static string QueueViewModel_NoPendingJobs {
            get {
                return ResourceManager.GetString("QueueViewModel_NoPendingJobs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue.
        /// </summary>
        public static string QueueViewModel_Queue {
            get {
                return ResourceManager.GetString("QueueViewModel_Queue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Completed.
        /// </summary>
        public static string QueueViewModel_QueueCompleted {
            get {
                return ResourceManager.GetString("QueueViewModel_QueueCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Not Running.
        /// </summary>
        public static string QueueViewModel_QueueNotRunning {
            get {
                return ResourceManager.GetString("QueueViewModel_QueueNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Paused.
        /// </summary>
        public static string QueueViewModel_QueuePaused {
            get {
                return ResourceManager.GetString("QueueViewModel_QueuePaused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Queue has been paused. The currently running job will run to completion and no further jobs will start..
        /// </summary>
        public static string QueueViewModel_QueuePauseNotice {
            get {
                return ResourceManager.GetString("QueueViewModel_QueuePauseNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Paused.
        /// </summary>
        public static string QueueViewModel_QueuePending {
            get {
                return ResourceManager.GetString("QueueViewModel_QueuePending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Ready.
        /// </summary>
        public static string QueueViewModel_QueueReady {
            get {
                return ResourceManager.GetString("QueueViewModel_QueueReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Started.
        /// </summary>
        public static string QueueViewModel_QueueStarted {
            get {
                return ResourceManager.GetString("QueueViewModel_QueueStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding: Pass {0} of {1},  {2:00.00}%, FPS: {3:000.0},  Avg FPS: {4:000.0},  Time Remaining: {5},  Elapsed: {6:d\:hh\:mm\:ss}.
        /// </summary>
        public static string QueueViewModel_QueueStatusDisplay {
            get {
                return ResourceManager.GetString("QueueViewModel_QueueStatusDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred when trying to stop the scan. Please restart HandBrake..
        /// </summary>
        public static string ScanService_ScanStopFailed {
            get {
                return ResourceManager.GetString("ScanService_ScanStopFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any settings you changed may need to be reset the next time HandBrake launches..
        /// </summary>
        public static string SettingService_SaveErrorReset {
            get {
                return ResourceManager.GetString("SettingService_SaveErrorReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Encode is currently running. Exiting HandBrake will stop this encode.
        ///Are you sure you wish to exit HandBrake?.
        /// </summary>
        public static string ShellViewModel_CanClose {
            get {
                return ResourceManager.GetString("ShellViewModel_CanClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready.
        /// </summary>
        public static string State_Ready {
            get {
                return ResourceManager.GetString("State_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to delete previous preview file. You may need to restart the application..
        /// </summary>
        public static string StaticPreview_UnableToDeletePreview {
            get {
                return ResourceManager.GetString("StaticPreview_UnableToDeletePreview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview ({0}% actual size).
        /// </summary>
        public static string StaticPreviewView_Title {
            get {
                return ResourceManager.GetString("StaticPreviewView_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handbrake is already encoding a video! Only one file can be encoded at any one time..
        /// </summary>
        public static string StaticPreviewViewModel_AlreadyEncoding {
            get {
                return ResourceManager.GetString("StaticPreviewViewModel_AlreadyEncoding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must first scan a source and setup your encode before creating a preview..
        /// </summary>
        public static string StaticPreviewViewModel_ScanFirst {
            get {
                return ResourceManager.GetString("StaticPreviewViewModel_ScanFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Picture Preview.
        /// </summary>
        public static string StaticPreviewViewModel_Title {
            get {
                return ResourceManager.GetString("StaticPreviewViewModel_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to detect VLC Player. 
        ///Please make sure VLC is installed and the directory specified in HandBrake&apos;s options is correct. (See: &quot;Tools Menu &gt; Options &gt; Picture Tab&quot;).
        /// </summary>
        public static string StaticPreviewViewModel_UnableToFindVLC {
            get {
                return ResourceManager.GetString("StaticPreviewViewModel_UnableToFindVLC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the preview file. Either the file was deleted or the encode failed. Check the activity log for details..
        /// </summary>
        public static string StaticPreviewViewModel_UnableToPlayFile {
            get {
                return ResourceManager.GetString("StaticPreviewViewModel_UnableToPlayFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None - Only tracks where the container does not support the format will be burned in.
        ///Foreign Audio Track - The Foreign Audio track will be burned in if available. 
        ///First Track - The first track will be burned in.
        ///Foreign Audio Preferred, else First - If the foreign audio track exists, it will be burned in, otherwise the first track will be chosen..
        /// </summary>
        public static string Subtitles_BurnInBehaviourModes {
            get {
                return ResourceManager.GetString("Subtitles_BurnInBehaviourModes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection Behavior.
        /// </summary>
        public static string SubtitlesViewModel_ConfigureDefaults {
            get {
                return ResourceManager.GetString("SubtitlesViewModel_ConfigureDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subtitle Defaults.
        /// </summary>
        public static string SubtitlesViewModel_SubDefaults {
            get {
                return ResourceManager.GetString("SubtitlesViewModel_SubDefaults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subtitle Tracks.
        /// </summary>
        public static string SubtitlesViewModel_SubTracks {
            get {
                return ResourceManager.GetString("SubtitlesViewModel_SubTracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch Back To Tracks.
        /// </summary>
        public static string SubtitlesViewModel_SwitchToTracks {
            get {
                return ResourceManager.GetString("SubtitlesViewModel_SwitchToTracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {1}%, Pass {2} of {3}
        ///Remaining Time: {4}.
        /// </summary>
        public static string TaskTrayStatusTitle {
            get {
                return ResourceManager.GetString("TaskTrayStatusTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Error.
        /// </summary>
        public static string UnknownError {
            get {
                return ResourceManager.GetString("UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated.
        /// </summary>
        public static string Updated {
            get {
                return ResourceManager.GetString("Updated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A problem occurred when trying to save your preferences..
        /// </summary>
        public static string UserSettings_AnErrorOccured {
            get {
                return ResourceManager.GetString("UserSettings_AnErrorOccured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load user settings file: {0}.
        /// </summary>
        public static string UserSettings_UnableToLoad {
            get {
                return ResourceManager.GetString("UserSettings_UnableToLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your user settings file appears to be inaccessible or corrupted. You may have to delete the file and let HandBrake generate a new one..
        /// </summary>
        public static string UserSettings_UnableToLoadSolution {
            get {
                return ResourceManager.GetString("UserSettings_UnableToLoadSolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your user settings file was corrupted or inaccessible. Settings have been reset to defaults..
        /// </summary>
        public static string UserSettings_YourSettingsAreCorrupt {
            get {
                return ResourceManager.GetString("UserSettings_YourSettingsAreCorrupt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning, your settings have been reset!.
        /// </summary>
        public static string UserSettings_YourSettingsHaveBeenReset {
            get {
                return ResourceManager.GetString("UserSettings_YourSettingsHaveBeenReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The full list of encoder parameters: 
        ///{0}.
        /// </summary>
        public static string Video_EncoderExtraArgs {
            get {
                return ResourceManager.GetString("Video_EncoderExtraArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional advanced arguments that can be passed to the video encoder..
        /// </summary>
        public static string Video_EncoderExtraArgsTooltip {
            get {
                return ResourceManager.GetString("Video_EncoderExtraArgsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Higher Quality |.
        /// </summary>
        public static string Video_HigherQuality {
            get {
                return ResourceManager.GetString("Video_HigherQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: RF 0 is Lossless!.
        /// </summary>
        public static string Video_LosslessWarning {
            get {
                return ResourceManager.GetString("Video_LosslessWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A value of 0 means lossless and will result in a file size that is larger than the original source, 
        ///unless the source was also lossless. 
        ///
        ///x264 and x265&apos;s scale is logarithmic and lower values correspond to higher quality. 
        ///
        ///So small increases in value will result in progressively larger increases in the resulting file size..
        /// </summary>
        public static string Video_LosslessWarningTooltip {
            get {
                return ResourceManager.GetString("Video_LosslessWarningTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to | Lower Quality.
        /// </summary>
        public static string Video_LowQuality {
            get {
                return ResourceManager.GetString("Video_LowQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Placebo Quality |.
        /// </summary>
        public static string Video_PlaceboQuality {
            get {
                return ResourceManager.GetString("Video_PlaceboQuality", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to QuickSync hardware not detected or enabled! 
        ///
        ///In order to use the QuickSync encoder, you must:
        ///
        ///- Have a Intel CPU with HD Graphics and QuickSync support. 4th Generation Haswell or newer parts are recommended for best quality.
        ///- Have the HD Graphics enabled.
        ///- On older versions of windows before 8, a monitor connected to the HD Graphics or GPU Virtualisation software installed is also required..
        /// </summary>
        public static string Video_QuickSyncNotAvailable {
            get {
                return ResourceManager.GetString("Video_QuickSyncNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reduce decoder CPU usage.
        ///
        ///Set this if your device is struggling to play the output. (i.e. dropped frames).
        /// </summary>
        public static string Video_x264FastDecode {
            get {
                return ResourceManager.GetString("Video_x264FastDecode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} - ({1}%, Pass {2} of {3}).
        /// </summary>
        public static string WindowTitleStatus {
            get {
                return ResourceManager.GetString("WindowTitleStatus", resourceCulture);
            }
        }
    }
}
